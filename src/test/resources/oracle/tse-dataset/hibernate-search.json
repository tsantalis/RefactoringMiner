{
  "results": [
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "8526bd09224eb2239969563203e7bbccb122815a",
      "url": "https://github.com/hibernate/hibernate-search/commit/8526bd09224eb2239969563203e7bbccb122815a",
      "commonRefactoring": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprotected actualNewCollector() : Collector renamed to public newCollector() : Collector in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.HibernateSearchMultiCollectorManagerMulti",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprotected actualNewCollector() : Collector renamed to public newCollector() : Collector in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.HibernateSearchMultiCollectorManagerSingle",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tcollectedResults : MultiCollectedResults in method public collectMatchingDocs() : void from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic queryTimeout() : HibernateSearchQueryTimeout extracted from public collectMatchingDocs() : void in class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors & moved to class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager",
          "validation": false
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic newCollector() : Collector renamed to public queryTimeout() : HibernateSearchQueryTimeout in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager",
          "validation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate wrapTimeLimitingCollectorIfNecessary(collector Collector) : Collector inlined to public queryTimeout() : HibernateSearchQueryTimeout in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollector to HibernateSearchQueryTimeout in method public queryTimeout() : HibernateSearchQueryTimeout from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "c4cb8b6876c27cc1364250ce70e8155bdd2c5748",
      "url": "https://github.com/hibernate/hibernate-search/commit/c4cb8b6876c27cc1364250ce70e8155bdd2c5748",
      "commonRefactoring": [
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.bridge.runtime.impl.PojoIdentifierBridgeDocumentValueConverter.ContextExtension moved and renamed to org.hibernate.search.mapper.pojo.bridge.runtime.impl.PojoIdentifierBridgeContextExtension",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tfield : ElasticsearchSearchIndexValueFieldContext<String> to field : ElasticsearchSearchIndexValueFieldContext<?> in class org.hibernate.search.backend.elasticsearch.types.predicate.impl.ElasticsearchCommonQueryStringPredicateBuilderFieldState",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tElasticsearchSearchIndexValueFieldContext<String> to ElasticsearchSearchIndexValueFieldContext<?> in method public field() : ElasticsearchSearchIndexValueFieldContext<?> from class org.hibernate.search.backend.elasticsearch.types.predicate.impl.ElasticsearchCommonQueryStringPredicateBuilderFieldState",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic MatchPredicateTestValues(fieldType FieldTypeDescriptor<F,?>, values List<F>) extracted from public MatchPredicateTestValues(fieldType FieldTypeDescriptor<F,?>) in class org.hibernate.search.integrationtest.backend.tck.search.predicate.MatchPredicateTestValues",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic RangePredicateTestValues(fieldType FieldTypeDescriptor<F,?>, values List<F>) extracted from public RangePredicateTestValues(fieldType FieldTypeDescriptor<F,?>) in class org.hibernate.search.integrationtest.backend.tck.search.predicate.RangePredicateTestValues",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic TermsPredicateTestValues(fieldType FieldTypeDescriptor<F,?>, values List<F>) extracted from public TermsPredicateTestValues(fieldType FieldTypeDescriptor<F,?>) in class org.hibernate.search.integrationtest.backend.tck.search.predicate.TermsPredicateTestValues",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tINSTANCE : ContextExtension to INSTANCE : PojoIdentifierBridgeContextExtension in class org.hibernate.search.mapper.pojo.bridge.runtime.impl.PojoIdentifierBridgeContextExtension",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpackage simpleQueryString(field String, value1 String, value2 String, noMatch String, unParsableValue String) : void from class org.hibernate.search.integrationtest.backend.lucene.search.LuceneSimpleQuerySearchPredicateIT to package simpleQueryStringSyntax(field String, value1 String, value2 String, noMatch String, unParsableValue String) : void from class org.hibernate.search.integrationtest.backend.tck.search.predicate.SimpleQueryStringPredicateSpecificsIT",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpackage queryString(field String, value1 String, value2 String, noMatch String, unParsableValue String) : void from class org.hibernate.search.integrationtest.backend.lucene.search.LuceneSimpleQuerySearchPredicateIT to package queryStringSyntax(field String, value1 String, value2 String, noMatch String, unParsableValue String) : void from class org.hibernate.search.integrationtest.backend.tck.search.predicate.QueryStringPredicateSpecificsIT",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpackage integer : IndexFieldReference<Integer> from class org.hibernate.search.integrationtest.backend.lucene.search.LuceneSimpleQuerySearchPredicateIT.IndexBinding to private integer : IndexFieldReference<Integer> from class org.hibernate.search.integrationtest.backend.tck.search.predicate.AbstractPredicateTypeCheckingAndConversionIT.IndexIntegerBinding",
          "validation": false
        },
        {
          "type": "MOVE_RENAME_ATTRIBUTE",
          "description": "Move And Rename Attribute\tprivate index : SimpleMappedIndex<IndexBinding> renamed to protected indexForSyntaxParsingCheck : SimpleMappedIndex<IndexSyntaxParsingBinding> and moved from class org.hibernate.search.integrationtest.backend.lucene.search.LuceneSimpleQuerySearchPredicateIT to class org.hibernate.search.integrationtest.backend.tck.search.predicate.AbstractBaseQueryStringPredicateSpecificsIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tindex : SimpleMappedIndex<IndexBinding> to indexForSyntaxParsingCheck : SimpleMappedIndex<IndexSyntaxParsingBinding> in class org.hibernate.search.integrationtest.backend.tck.search.predicate.AbstractBaseQueryStringPredicateSpecificsIT",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpublic simpleQueryString() : List<? extends Arguments> from class org.hibernate.search.integrationtest.backend.lucene.search.LuceneSimpleQuerySearchPredicateIT to public simpleQueryStringSyntax1() : List<? extends Arguments> from class org.hibernate.search.integrationtest.backend.tck.search.predicate.SimpleQueryStringPredicateSpecificsIT",
          "validation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tprotected addMatchAllForBoolMustNotOnly(query Query) : Query extracted from protected buildQuery() : Query in class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.Builder & moved to class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneCommonQueryStringPredicate.Builder",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tbooleanQuery : BooleanQuery in method protected applyMinimumShouldMatch(query Query) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneCommonQueryStringPredicate.Builder",
          "validation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcodec : LuceneFieldCodec<?> in method protected newFieldQuery(analyzer Analyzer, field String, queryText String, quoted boolean) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.HibernateSearchMultiFieldQueryParser",
          "validation": false
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcodec : LuceneFieldCodec<?> in method protected newRangeQuery(field String, part1 String, part2 String, startInclusive boolean, endInclusive boolean) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.HibernateSearchMultiFieldQueryParser",
          "validation": false
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcodec : LuceneFieldCodec<?> in method protected createFieldQuery(analyzer Analyzer, operator BooleanClause.Occur, field String, queryText String, quoted boolean, phraseSlop int) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneSimpleQueryStringPredicate.HibernateSearchSimpleQueryParser",
          "validation": false
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcodec : LuceneFieldCodec<?> to builder : var in method protected newFieldQuery(analyzer Analyzer, field String, queryText String, quoted boolean) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.HibernateSearchMultiFieldQueryParser",
          "validation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tcodec : LuceneFieldCodec<?> to builder : var in method protected newFieldQuery(analyzer Analyzer, field String, queryText String, quoted boolean) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.HibernateSearchMultiFieldQueryParser",
          "validation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcodec : LuceneFieldCodec<?> to builder : var in method protected newRangeQuery(field String, part1 String, part2 String, startInclusive boolean, endInclusive boolean) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.HibernateSearchMultiFieldQueryParser",
          "validation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tcodec : LuceneFieldCodec<?> to builder : var in method protected newRangeQuery(field String, part1 String, part2 String, startInclusive boolean, endInclusive boolean) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.HibernateSearchMultiFieldQueryParser",
          "validation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcodec : LuceneFieldCodec<?> to builder : var in method protected createFieldQuery(analyzer Analyzer, operator BooleanClause.Occur, field String, queryText String, quoted boolean, phraseSlop int) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneSimpleQueryStringPredicate.HibernateSearchSimpleQueryParser",
          "validation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tcodec : LuceneFieldCodec<?> to builder : var in method protected createFieldQuery(analyzer Analyzer, operator BooleanClause.Occur, field String, queryText String, quoted boolean, phraseSlop int) : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneSimpleQueryStringPredicate.HibernateSearchSimpleQueryParser",
          "validation": false
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpackage debug() : void from class org.hibernate.search.integrationtest.backend.lucene.search.LuceneSimpleQuerySearchPredicateIT to package parse_unConfigured() : void from class org.hibernate.search.integrationtest.backend.tck.search.predicate.MatchIdPredicateSpecificsIT",
          "validation": false
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpublic fromString(string String) : String moved from class org.hibernate.search.backend.lucene.types.codec.impl.LuceneStringFieldCodec to class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneQueryStringPredicate.HibernateSearchMultiFieldQueryParser & inlined to protected newFieldQuery(analyzer Analyzer, field String, queryText String, quoted boolean) : Query",
          "validation": false
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpublic fromString(string String) : String moved from class org.hibernate.search.backend.lucene.types.codec.impl.LuceneStringFieldCodec to class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneSimpleQueryStringPredicate.HibernateSearchSimpleQueryParser & inlined to protected createFieldQuery(analyzer Analyzer, operator BooleanClause.Occur, field String, queryText String, quoted boolean, phraseSlop int) : Query",
          "validation": false
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "6fbdfd0debd6554dcfc46306455266c2e8b0cc44",
      "url": "https://github.com/hibernate/hibernate-search/commit/6fbdfd0debd6554dcfc46306455266c2e8b0cc44",
      "commonRefactoring": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<String> to A in method public extract(projectionHitMapper ProjectionHitMapper<?>, hit JsonObject, source JsonObject, context ProjectionExtractContext) : A from class org.hibernate.search.backend.elasticsearch.search.projection.impl.ElasticsearchFieldHighlightProjection.FieldHighlightExtractor",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<String> to T in method public transform(loadingResult LoadingResult<?>, extractedData A, context ProjectionTransformContext) : T from class org.hibernate.search.backend.elasticsearch.search.projection.impl.ElasticsearchFieldHighlightProjection.FieldHighlightExtractor",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tFieldHighlightExtractor to Extractor<?,T> in method public request(requestBody JsonObject, context ProjectionRequestContext) : Extractor<?,T> from class org.hibernate.search.backend.elasticsearch.search.projection.impl.ElasticsearchFieldHighlightProjection",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\taccumulator : ProjectionAccumulator<String,String,A,List<String>> to accumulator : ProjectionAccumulator<String,String,A,T> in class org.hibernate.search.backend.lucene.search.projection.impl.LuceneFieldHighlightProjection.FieldHighlightExtractor",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<String> to T in method public transform(loadingResult LoadingResult<?>, extractedData A, context ProjectionTransformContext) : T from class org.hibernate.search.backend.lucene.search.projection.impl.LuceneFieldHighlightProjection.FieldHighlightExtractor",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tFieldHighlightExtractor<?> to Extractor<?,T> in method public request(context ProjectionRequestContext) : Extractor<?,T> from class org.hibernate.search.backend.lucene.search.projection.impl.LuceneFieldHighlightProjection",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHighlightProjectionFinalStep to HighlightProjectionOptionsStep in method public highlighter(highlighterName String) : HighlightProjectionOptionsStep from class org.hibernate.search.engine.search.projection.dsl.HighlightProjectionOptionsStep",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHighlightProjectionFinalStep to HighlightProjectionOptionsStep in method public highlighter(highlighterName String) : HighlightProjectionOptionsStep from class org.hibernate.search.engine.search.projection.dsl.impl.HighlightProjectionOptionsStepImpl",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSearchProjection<List<String>> to SearchProjection<V> in method public build(accumulatorProvider ProjectionAccumulator.Provider<String,V>) : SearchProjection<V> from class org.hibernate.search.util.impl.integrationtest.common.stub.backend.search.projection.impl.StubFieldHighlightProjection.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tList<String> to T in method public transform(loadingResult LoadingResult<?>, extractedData Object, context StubSearchProjectionContext) : T from class org.hibernate.search.util.impl.integrationtest.common.stub.backend.search.projection.impl.StubFieldHighlightProjection",
          "validation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic create(factory SearchProjectionFactory<?,?>, context ProjectionDefinitionContext) : SearchProjection<List<String>> from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Definition to public create(factory SearchProjectionFactory<?,?>, context ProjectionDefinitionContext) : SearchProjection<List<String>> from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Multi",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSearchProjection<List<String>> to SearchProjection<V> in method public abstract build(accumulatorProvider ProjectionAccumulator.Provider<String,V>) : SearchProjection<V> from class org.hibernate.search.engine.search.projection.dsl.spi.HighlightProjectionBuilder",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tElasticsearchFieldHighlightProjection to SearchProjection<V> in method public build(accumulatorProvider ProjectionAccumulator.Provider<String,V>) : SearchProjection<V> from class org.hibernate.search.backend.elasticsearch.search.projection.impl.ElasticsearchFieldHighlightProjection.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tLuceneFieldHighlightProjection to SearchProjection<V> in method public build(accumulatorProvider ProjectionAccumulator.Provider<String,V>) : SearchProjection<V> from class org.hibernate.search.backend.lucene.search.projection.impl.LuceneFieldHighlightProjection.Builder",
          "validation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic create(factory SearchProjectionFactory<?,?>, context ProjectionDefinitionContext) : SearchProjection<List<String>> from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Definition to public create(factory SearchProjectionFactory<?,?>, context ProjectionDefinitionContext) : SearchProjection<? extends String> from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Single",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSearchProjection<List<String>> to SearchProjection<? extends String> in method public create(factory SearchProjectionFactory<?,?>, context ProjectionDefinitionContext) : SearchProjection<? extends String> from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Single",
          "validation": true
        },
        {
          "type": "EXTRACT_SUBCLASS",
          "description": "Extract Subclass\torg.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Single from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Definition",
          "validation": true
        },
        {
          "type": "EXTRACT_SUBCLASS",
          "description": "Extract Subclass\torg.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Multi from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder.Definition",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tmapping : SearchMapping in method package singleValued() : void from class org.hibernate.search.integrationtest.mapper.pojo.mapping.definition.ProjectionConstructorHighlightProjectionIT",
          "validation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tmulti : ProjectionBindingMultiContext in method public bind(context ProjectionBindingContext) : void from class org.hibernate.search.mapper.pojo.search.definition.binding.builtin.HighlightProjectionBinder",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresult : List<String> to initial : A in method public extract(projectionHitMapper ProjectionHitMapper<?>, hit JsonObject, source JsonObject, context ProjectionExtractContext) : A from class org.hibernate.search.backend.elasticsearch.search.projection.impl.ElasticsearchFieldHighlightProjection.FieldHighlightExtractor",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tresult : List<String> to initial : A in method public extract(projectionHitMapper ProjectionHitMapper<?>, hit JsonObject, source JsonObject, context ProjectionExtractContext) : A from class org.hibernate.search.backend.elasticsearch.search.projection.impl.ElasticsearchFieldHighlightProjection.FieldHighlightExtractor",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "91aaa23a696c9cdb9f84cedaa3ffab4f6613ae2d",
      "url": "https://github.com/hibernate/hibernate-search/commit/91aaa23a696c9cdb9f84cedaa3ffab4f6613ae2d",
      "commonRefactoring": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic getIndexNames() : Set<String> renamed to public indexNames() : Set<String> in class org.hibernate.search.backend.elasticsearch.search.aggregation.impl.AbstractElasticsearchAggregation",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic getIndexNames() : Set<String> renamed to public indexNames() : Set<String> in class org.hibernate.search.backend.lucene.types.aggregation.impl.AbstractLuceneBucketAggregation",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic getIndexNames() : Set<String> renamed to public indexNames() : Set<String> in class org.hibernate.search.backend.elasticsearch.search.aggregation.impl.ElasticsearchSearchAggregation",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic getIndexNames() : Set<String> renamed to public indexNames() : Set<String> in class org.hibernate.search.backend.lucene.search.aggregation.impl.LuceneSearchAggregation",
          "validation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tpredicate2 : SearchPredicate in method package reuseRootPredicateInstance_onScopeTargetingDifferentIndexes() : void from class org.hibernate.search.integrationtest.backend.tck.search.predicate.SearchPredicateIT",
          "validation": false
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tsort2 : SearchSort in method package reuseSortInstance_onScopeTargetingDifferentIndexes() : void from class org.hibernate.search.integrationtest.backend.tck.search.sort.SearchSortIT",
          "validation": false
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "143484c9e4c8e29407a1d03c9186a34acfad13b1",
      "url": "https://github.com/hibernate/hibernate-search/commit/143484c9e4c8e29407a1d03c9186a34acfad13b1",
      "commonRefactoring": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.IndexedEntityWithTenant renamed to org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.AbstractIndexedEntityWithTenant",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttenantId : Object in method package searchSession_withOptions() : void from class org.hibernate.search.documentation.mapper.pojo.standalone.entrypoints.StandalonePojoEntryPointsIT",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttenantId : Object in method package test() : void from class org.hibernate.search.documentation.mapper.pojo.standalone.multitenancy.StandalonePojoMultiTenancyIT",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tTENANT_1 : String to tenant1 : Object in class org.hibernate.search.integrationtest.backend.tck.multitenancy.MultiTenancyBaseIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_1 : String to tenant1 : Object in class org.hibernate.search.integrationtest.backend.tck.multitenancy.MultiTenancyBaseIT",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tTENANT_2 : String to tenant2 : Object in class org.hibernate.search.integrationtest.backend.tck.multitenancy.MultiTenancyBaseIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_2 : String to tenant2 : Object in class org.hibernate.search.integrationtest.backend.tck.multitenancy.MultiTenancyBaseIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttenant1Id : String to tenant1Id : Object in method package multiTenant() : void from class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingWhileMassIndexingIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttenant2Id : String to tenant2Id : Object in method package multiTenant() : void from class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingWhileMassIndexingIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantId : String to tenantId : Object in class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.mapping.AbortedEventsGenerator",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_1_ID : String to TENANT_1_ID : Object in class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.mapping.OutboxPollingSearchMappingMultiTenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_2_ID : String to TENANT_2_ID : Object in class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.mapping.OutboxPollingSearchMappingMultiTenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_3_ID : String to TENANT_3_ID : Object in class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.mapping.OutboxPollingSearchMappingMultiTenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcurrentTenant : InheritableThreadLocal<String> to currentTenant : InheritableThreadLocal<Object> in class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.TenantIdentifierResolver",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tString to Object in method public resolveCurrentTenantIdentifier() : Object from class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.TenantIdentifierResolver",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tTENANT_ID_1 : String to tenant1 : Object in class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_ID_1 : String to tenant1 : Object in class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tTENANT_ID_2 : String to tenant2 : Object in class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_ID_2 : String to tenant2 : Object in class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tTENANT_ID_3 : String to tenant3 : Object in class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_ID_3 : String to tenant3 : Object in class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tString to Object in method private targetTenantId() : Object from class org.hibernate.search.integrationtest.mapper.orm.massindexing.MassIndexingBaseIT",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<String> to Set<Object> in method private allTenantIds() : Set<Object> from class org.hibernate.search.integrationtest.mapper.orm.massindexing.MassIndexingBaseIT",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tMETAMEC_TID : String to tenant1 : Object in class org.hibernate.search.integrationtest.mapper.orm.multitenancy.DatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tMETAMEC_TID : String to tenant1 : Object in class org.hibernate.search.integrationtest.mapper.orm.multitenancy.DatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tGEOCHRON_TID : String to tenant2 : Object in class org.hibernate.search.integrationtest.mapper.orm.multitenancy.DatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tGEOCHRON_TID : String to tenant2 : Object in class org.hibernate.search.integrationtest.mapper.orm.multitenancy.DatabaseMultitenancyIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantId : String to tenantId : Object in class org.hibernate.search.integrationtest.mapper.pojo.work.operations.AbstractPojoIndexingOperationIT",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantId : String to tenantId : Object in class org.hibernate.search.jakarta.batch.core.massindexing.MassIndexingJob.ParametersBuilder",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTENANT_ID : String to TENANT_ID : Object in class org.hibernate.search.jakarta.batch.core.massindexing.MassIndexingJobParametersBuilderTest",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttenantId : String to tenantId : Object in method public OutboxPollingEventProcessor(name String, factory Factory, executor ScheduledExecutorService, agentRepositoryProvider AgentRepositoryProvider, clusterLink OutboxPollingEventProcessorClusterLink) from class org.hibernate.search.mapper.orm.outboxpolling.event.impl.OutboxPollingEventProcessor",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttenantId : String to tenantId : Object in method private OutboxPollingMassIndexerAgent(name String, factory Factory, agentRepositoryProvider AgentRepositoryProvider, clusterLink OutboxPollingMassIndexerAgentClusterLink) from class org.hibernate.search.mapper.orm.outboxpolling.event.impl.OutboxPollingMassIndexerAgent",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate doCountAbortedEvents(sessionCreator Function<SessionFactory,SessionBuilder>) : long extracted from public countAbortedEvents() : long in class org.hibernate.search.mapper.orm.outboxpolling.mapping.impl.OutboxPollingSearchMappingImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate doCountAbortedEvents(sessionCreator Function<SessionFactory,SessionBuilder>) : long extracted from public countAbortedEvents(tenantId String) : long in class org.hibernate.search.mapper.orm.outboxpolling.mapping.impl.OutboxPollingSearchMappingImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate doReprocessAbortedEvents(sessionCreator Function<SessionFactory,SessionBuilder>) : int extracted from public reprocessAbortedEvents() : int in class org.hibernate.search.mapper.orm.outboxpolling.mapping.impl.OutboxPollingSearchMappingImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate doReprocessAbortedEvents(sessionCreator Function<SessionFactory,SessionBuilder>) : int extracted from public reprocessAbortedEvents(tenantId String) : int in class org.hibernate.search.mapper.orm.outboxpolling.mapping.impl.OutboxPollingSearchMappingImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate doClearAllAbortedEvents(sessionCreator Function<SessionFactory,SessionBuilder>) : int extracted from public clearAllAbortedEvents() : int in class org.hibernate.search.mapper.orm.outboxpolling.mapping.impl.OutboxPollingSearchMappingImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate doClearAllAbortedEvents(sessionCreator Function<SessionFactory,SessionBuilder>) : int extracted from public clearAllAbortedEvents(tenantId String) : int in class org.hibernate.search.mapper.orm.outboxpolling.mapping.impl.OutboxPollingSearchMappingImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic massIndexer(tenantId Object) : MassIndexer extracted from public massIndexer(tenantId String) : MassIndexer in class org.hibernate.search.mapper.orm.scope.impl.SearchScopeImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic workspace(tenantId Object) : SearchWorkspace extracted from public workspace(tenantId String) : SearchWorkspace in class org.hibernate.search.mapper.pojo.standalone.scope.impl.SearchScopeImpl",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantId : String to tenantId : Object in class org.hibernate.search.util.impl.integrationtest.common.extension.BackendMock.DocumentWorkCallListContext",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic tenants(tenants String...) : SetupContext renamed to public tenantsWithHelperEnabled(tenants Object...) : SetupContext in class org.hibernate.search.util.impl.integrationtest.mapper.orm.OrmSetupHelper.SetupContext",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantsIds : List<String> to tenantsIds : List<Object> in class org.hibernate.search.util.impl.integrationtest.mapper.orm.OrmSetupHelperCleaner.DataClearConfigImpl",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttenantsId : String to tenantsId : Object in method private clearDatabase(sessionFactory SessionFactoryImplementor, mapping HibernateOrmMapping) : void from class org.hibernate.search.util.impl.integrationtest.mapper.orm.OrmSetupHelperCleaner",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantIds : String[] to tenantIds : Object[] in class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.H2LazyMultiTenantConnectionProvider",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdelegates : Map<String,ConnectionProvider> to delegates : Map<Object,ConnectionProvider> in class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.H2LazyMultiTenantConnectionProvider",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttenantId : String to tenantId : Object in method private getOrCreateDelegates() : Map<Object,ConnectionProvider> from class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.H2LazyMultiTenantConnectionProvider",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tMap<String,ConnectionProvider> to Map<Object,ConnectionProvider> in method private getOrCreateDelegates() : Map<Object,ConnectionProvider> from class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.H2LazyMultiTenantConnectionProvider",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantIds : String[] to tenantIds : Object[] in class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.MultitenancyTestHelper",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantIds : String[] to tenantIds : Object[] in class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.MultitenancyTestHelperSchemaManagementTool.Initiator",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantIds : String[] to tenantIds : Object[] in class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.MultitenancyTestHelperSchemaManagementTool",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttenantId : String to tenantId : Object in method private createSchemaTargets(serviceRegistry ServiceRegistryImplementor) : GenerationTargetToDatabase[] from class org.hibernate.search.util.impl.integrationtest.mapper.orm.multitenancy.impl.MultitenancyTestHelperSchemaManagementTool",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttenantIdentifier : String to tenantIdentifier : Object in class org.hibernate.search.util.impl.integrationtest.mapper.stub.StubSession",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "PUSH_DOWN_ATTRIBUTE",
          "description": "Push Down Attribute\tprivate tenantName : String from class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.IndexedEntityWithTenant to private tenantName : String from class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.IndexedEntityWithStringTenant",
          "validation": true
        },
        {
          "type": "EXTRACT_SUBCLASS",
          "description": "Extract Subclass\torg.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.IndexedEntityWithStringTenant from class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.IndexedEntityWithTenant",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tentity : IndexedEntityWithTenant to entity : AbstractIndexedEntityWithTenant in method package multiTenancy_ormDiscriminator() : void from class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tsetupContext : OrmSetupHelper.SetupContext in method public setup(tenant1 Object, tenant2 Object, converter TenantIdentifierConverter) : void from class org.hibernate.search.integrationtest.jakarta.batch.massindexing.MassIndexingJobWithMultiTenancyIT",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate tenantName : String from class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.IndexedEntityWithTenant to private tenantName : String from class org.hibernate.search.integrationtest.mapper.orm.realbackend.multitenant.RealBackendDatabaseMultitenancyIT.IndexedEntityWithStringTenant",
          "validation": false
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "fee1c5f90c639ec7fe30699873788b892b84e4c7",
      "url": "https://github.com/hibernate/hibernate-search/commit/fee1c5f90c639ec7fe30699873788b892b84e4c7",
      "commonRefactoring": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate createEntitiesToIndex(sessionFactory SessionFactory, entityCount int) : void extracted from package agentLeft() : void in class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingDynamicShardingRebalancingIT",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate createEntitiesToIndex(sessionFactory SessionFactory, entityCount int) : void extracted from package agentExpired() : void in class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingDynamicShardingRebalancingIT",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate createEntitiesToIndex(sessionFactory SessionFactory, entityCount int) : void extracted from package agentJoined() : void in class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingDynamicShardingRebalancingIT",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic awaitIndexingAssertions(atMost Duration, assertions ThrowingRunnable) : void extracted from public awaitIndexingAssertions(assertions ThrowingRunnable) : void in class org.hibernate.search.util.impl.integrationtest.common.extension.BackendIndexingWorkExpectations",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ti : int to j : int in method package stopWhileOutboxEventsIsBeingProcessed() : void from class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingLifecycleIT",
          "validation": false
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tbatch : int in method package stopWhileOutboxEventsIsBeingProcessed() : void from class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingLifecycleIT",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tbatches : int in method package stopWhileOutboxEventsIsBeingProcessed() : void from class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingLifecycleIT",
          "validation": false
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tsessionFactoryForLambdaAssert : SessionFactory in method package stopWhileOutboxEventsIsBeingProcessed() : void from class org.hibernate.search.integrationtest.mapper.orm.outboxpolling.automaticindexing.OutboxPollingAutomaticIndexingLifecycleIT",
          "validation": false
        }
      ],
      "baseline": []
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "333c96da1cf44d805d03f5d5b569fd1f3349b4d9",
      "url": "https://github.com/hibernate/hibernate-search/commit/333c96da1cf44d805d03f5d5b569fd1f3349b4d9",
      "commonRefactoring": [
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tqueryFactory : TypeQueryFactory<E,?> in method private create(rootClass RootClass, rootMappedClass Class<E>) : HibernateOrmEntityIdEntityLoadingStrategy<E,?> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate toMostSpecificCommonEntitySuperType(sessionFactory SessionFactoryImplementor, targetEntityTypeContexts Iterable<? extends PojoLoadingTypeContext<?>>) : EntityMappingType from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy to protected toMostSpecificCommonEntitySuperType(sessionFactory SessionFactoryImplementor, targetEntityTypeContexts Iterable<? extends PojoLoadingTypeContext<?>>) : EntityMappingType from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tAssertionFailure to org.hibernate.AssertionFailure in method protected invalidTypesException(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<?>>) : org.hibernate.AssertionFailure from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tprivate invalidTypesException(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<?>>) : AssertionFailure from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy to protected invalidTypesException(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<?>>) : org.hibernate.AssertionFailure from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tqueryFactory : TypeQueryFactory<E,I> in method private create(persistentClass PersistentClass, mappedClass Class<E>, documentIdSourcePropertyClass Class<I>, documentIdSourcePropertyName String, documentIdSourceHandle ValueReadHandle<? extends I>) : HibernateOrmNonEntityIdPropertyEntityLoadingStrategy<E,I> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\trootEntityMappingType : var to commonSuperType : EntityMappingType in method public createQueryLoader(sessionFactory SessionFactoryImplementor, typeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, conditionalExpressions List<ConditionalExpression>, order String) : HibernateOrmQueryLoader<E,I> from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\trootEntityMappingType : var to commonSuperType : EntityMappingType in method public createQueryLoader(sessionFactory SessionFactoryImplementor, typeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, conditionalExpressions List<ConditionalExpression>, order String) : HibernateOrmQueryLoader<E,I> from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "678a3495f56d9af38f3f1e61f34a2cde3136d106",
      "url": "https://github.com/hibernate/hibernate-search/commit/678a3495f56d9af38f3f1e61f34a2cde3136d106",
      "commonRefactoring": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic tenantFilterOrNull() : Query renamed to public appendTenantAndRoutingFilters(originalFilterQuery Query) : Query in class org.hibernate.search.backend.lucene.search.predicate.impl.PredicateRequestContext.LimitedPredicateRequestContext",
          "validation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic tenantAndRoutingFilters() : JsonArray extracted from public build() : ElasticsearchSearchQuery<H> in class org.hibernate.search.backend.elasticsearch.search.query.impl.ElasticsearchSearchQueryBuilder & moved to class org.hibernate.search.backend.elasticsearch.search.predicate.impl.PredicateRequestContext",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic abstract tenantFilterOrNull() : Query renamed to public abstract appendTenantAndRoutingFilters(originalFilterQuery Query) : Query in class org.hibernate.search.backend.lucene.search.predicate.impl.PredicateRequestContext",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic tenantFilterOrNull() : Query renamed to public appendTenantAndRoutingFilters(originalFilterQuery Query) : Query in class org.hibernate.search.backend.lucene.search.predicate.impl.PredicateRequestContext.FullPredicateRequestContext",
          "validation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic tenantAndRoutingFilters() : JsonArray extracted from protected prepareFilter(context PredicateRequestContext) : JsonObject in class org.hibernate.search.backend.elasticsearch.search.predicate.impl.ElasticsearchKnnPredicate & moved to class org.hibernate.search.backend.elasticsearch.search.predicate.impl.PredicateRequestContext",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttenantFilter : JsonObject to filter : JsonObject in method public tenantAndRoutingFilters() : JsonArray from class org.hibernate.search.backend.elasticsearch.search.predicate.impl.PredicateRequestContext",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tmainFilter : JsonObject in method protected prepareFilter(context PredicateRequestContext) : JsonObject from class org.hibernate.search.backend.elasticsearch.search.predicate.impl.ElasticsearchKnnPredicate",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic boolCombineMust(must JsonObject, otherMustClauses JsonArray) : JsonObject extracted from protected prepareFilter(context PredicateRequestContext) : JsonObject in class org.hibernate.search.backend.elasticsearch.search.predicate.impl.ElasticsearchKnnPredicate & moved to class org.hibernate.search.backend.elasticsearch.lowlevel.query.impl.Queries",
          "validation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tfilters : JsonArray to mustClauses : JsonArray in method public boolCombineMust(must JsonObject, otherMustClauses JsonArray) : JsonObject from class org.hibernate.search.backend.elasticsearch.lowlevel.query.impl.Queries",
          "validation": false
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic appendTenantAndRoutingFilters(originalFilterQuery Query) : Query extracted from private prepareFilter(context PredicateRequestContext) : Query in class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneKnnPredicate & moved to class org.hibernate.search.backend.lucene.search.predicate.impl.PredicateRequestContext.FullPredicateRequestContext",
          "validation": false
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpublic tenantFilterOrNull() : Query moved from class org.hibernate.search.backend.lucene.search.predicate.impl.PredicateRequestContext.FullPredicateRequestContext to class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneKnnPredicate & inlined to private prepareFilter(context PredicateRequestContext) : Query",
          "validation": false
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\ttenantIdentifier : String in method public tenantFilterOrNull() : Query from class org.hibernate.search.backend.lucene.search.predicate.impl.PredicateRequestContext.FullPredicateRequestContext",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "a2024e11f11b167e077a9427be5f372c75342da1",
      "url": "https://github.com/hibernate/hibernate-search/commit/a2024e11f11b167e077a9427be5f372c75342da1",
      "commonRefactoring": [
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate prepareFilter(context PredicateRequestContext) : Query extracted from protected doToQuery(context PredicateRequestContext) : Query in class org.hibernate.search.backend.lucene.search.predicate.impl.LuceneKnnPredicate",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tnestedFilter : Query to nestedFilter : LuceneSearchPredicate in class org.hibernate.search.backend.lucene.types.aggregation.impl.AbstractLuceneNestableAggregation.AbstractBuilder",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tnestedFilter : Query to nestedFilter : LuceneSearchPredicate in class org.hibernate.search.backend.lucene.types.aggregation.impl.AbstractLuceneNestableAggregation",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tnestedFilter : Query to nestedFilter : LuceneSearchPredicate in class org.hibernate.search.backend.lucene.types.sort.impl.AbstractLuceneDocumentValueSort.AbstractBuilder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tObject to E in method protected getEffectiveMissingValue() : E from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.AbstractBuilder",
          "validation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic build() : SearchSort from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.AbstractBuilder to public build() : SearchSort from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.TextFieldBuilder",
          "validation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic build() : SearchSort from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.AbstractBuilder to public build() : SearchSort from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.NumericFieldBuilder",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tfilter : JsonObject in method protected doToJsonQuery(context PredicateRequestContext, outerObject JsonObject, innerObject JsonObject) : JsonObject from class org.hibernate.search.backend.elasticsearch.search.predicate.impl.ElasticsearchKnnPredicate.Elasticsearch812Impl",
          "validation": false
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tfilter : JsonObject in method protected doToJsonQuery(context PredicateRequestContext, outerObject JsonObject, innerObject JsonObject) : JsonObject from class org.hibernate.search.backend.elasticsearch.search.predicate.impl.ElasticsearchKnnPredicate.OpenSearchImpl",
          "validation": false
        }
      ],
      "baseline": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tjsonPredicate : JsonObject to elasticsearchPredicate : ElasticsearchSearchPredicate in class org.hibernate.search.backend.elasticsearch.search.query.impl.ElasticsearchSearchQueryBuilder",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tjsonPredicate : JsonObject to elasticsearchPredicate : ElasticsearchSearchPredicate in class org.hibernate.search.backend.elasticsearch.search.query.impl.ElasticsearchSearchQueryBuilder",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tprotected toFieldComparatorSource() : LuceneFieldComparatorSource from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneGeoPointDistanceSort.Builder to protected doCreateFieldComparatorSource(nestedDocumentPath String, multiValueMode MultiValueMode, nestedFilter Query) : LuceneFieldComparatorSource from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneGeoPointDistanceSort",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tprotected toFieldComparatorSource() : LuceneFieldComparatorSource from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.NumericFieldBuilder to protected doCreateFieldComparatorSource(nestedDocumentPath String, multiValueMode MultiValueMode, nestedFilter Query) : LuceneFieldComparatorSource from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.NumericFieldSort",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tprotected toFieldComparatorSource() : LuceneFieldComparatorSource from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.TextFieldBuilder to protected doCreateFieldComparatorSource(nestedDocumentPath String, multiValueMode MultiValueMode, nestedFilter Query) : LuceneFieldComparatorSource from class org.hibernate.search.backend.lucene.types.sort.impl.LuceneStandardFieldSort.TextFieldSort",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic root() : PredicateRequestContext renamed to public withoutSession() : PredicateRequestContext in class org.hibernate.search.backend.lucene.search.predicate.impl.PredicateRequestContext",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "5b7ff9004b3b9f7ec8b3463f33941d2fe46cce7c",
      "url": "https://github.com/hibernate/hibernate-search/commit/5b7ff9004b3b9f7ec8b3463f33941d2fe46cce7c",
      "commonRefactoring": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.backend.lucene.search.extraction.impl.CollectorSet.Builder moved to org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollectorKey<C> to CollectorKey<C,T> in method public getCollectorKey() : CollectorKey<C,T> from class org.hibernate.search.backend.lucene.lowlevel.collector.impl.CollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollectorKey<C> to CollectorKey<C,T> in method public create() : CollectorKey<C,T> from class org.hibernate.search.backend.lucene.lowlevel.collector.impl.CollectorKey",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tKEY : CollectorKey<FacetsCollector> to KEY : CollectorKey<FacetsCollector,FacetsCollector> in class org.hibernate.search.backend.lucene.lowlevel.collector.impl.FacetsCollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tINSTANCE : CollectorFactory<FacetsCollector> to INSTANCE : CollectorFactory<FacetsCollector,FacetsCollector,FacetsCollectorManager> in class org.hibernate.search.backend.lucene.lowlevel.collector.impl.FacetsCollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollectorKey<FacetsCollector> to CollectorKey<FacetsCollector,FacetsCollector> in method public getCollectorKey() : CollectorKey<FacetsCollector,FacetsCollector> from class org.hibernate.search.backend.lucene.lowlevel.collector.impl.FacetsCollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tTopDocsDataCollector<T> to CollectorManager<TopDocsDataCollector<T>,IntObjectMap<T>> in method public create(context TopDocsDataCollectorExecutionContext) : CollectorManager<TopDocsDataCollector<T>,IntObjectMap<T>> from class org.hibernate.search.backend.lucene.lowlevel.collector.impl.TopDocsDataCollector.Factory",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic getCollector(key CollectorKey<C>) : C renamed to public getFacets(key CollectorKey<C,T>) : T in class org.hibernate.search.backend.lucene.search.aggregation.impl.AggregationExtractContext",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tC to T in method public getFacets(key CollectorKey<C,T>) : T from class org.hibernate.search.backend.lucene.search.aggregation.impl.AggregationExtractContext",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcollectors : CollectorSet to multiCollectedResults : HibernateSearchMultiCollectorManager.MultiCollectedResults in class org.hibernate.search.backend.lucene.search.aggregation.impl.AggregationExtractContext",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcollectors : CollectorSet to multiCollectedResults : HibernateSearchMultiCollectorManager.MultiCollectedResults in class org.hibernate.search.backend.lucene.search.aggregation.impl.AggregationExtractContext",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\trequiredCollectorForAllMatchingDocsFactories : Set<CollectorFactory<?>> to requiredCollectorForAllMatchingDocsFactories : Set<CollectorFactory<?,?,?>> in class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\trequiredCollectorForAllMatchingDocsFactories : Set<CollectorFactory<?>> to requiredCollectorForAllMatchingDocsFactories : Set<CollectorFactory<?,?,?>> in class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttopDocsCollector : TopDocsCollector<?> to topDocsCollectorManager : CollectorManager<? extends TopDocsCollector<?>,? extends TopDocs> in method public createCollectors(indexSearcher IndexSearcher, originalLuceneQuery Query, sort Sort, metadataResolver IndexReaderMetadataResolver, maxDocs int, offset int, timeoutManager TimeoutManager, requestedTotalHitCountThreshold int) : LuceneCollectors from class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcollectorsForAllMatchingDocs : CollectorSet to collectorManager : HibernateSearchMultiCollectorManager in method public createCollectors(indexSearcher IndexSearcher, originalLuceneQuery Query, sort Sort, metadataResolver IndexReaderMetadataResolver, maxDocs int, offset int, timeoutManager TimeoutManager, requestedTotalHitCountThreshold int) : LuceneCollectors from class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcollectorsForAllMatchingDocsBuilder : CollectorSet.Builder to collectorsForAllMatchingDocsBuilder : HibernateSearchMultiCollectorManager.Builder in method public createCollectors(indexSearcher IndexSearcher, originalLuceneQuery Query, sort Sort, metadataResolver IndexReaderMetadataResolver, maxDocs int, offset int, timeoutManager TimeoutManager, requestedTotalHitCountThreshold int) : LuceneCollectors from class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttopDocsCollector : TopDocsCollector<?> to topDocsCollectorManager : CollectorManager<? extends TopDocsCollector<?>,? extends TopDocs> in method public createCollectors(indexSearcher IndexSearcher, originalLuceneQuery Query, sort Sort, metadataResolver IndexReaderMetadataResolver, maxDocs int, offset int, timeoutManager TimeoutManager, requestedTotalHitCountThreshold int) : LuceneCollectors from class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tcollectorsForAllMatchingDocs : CollectorSet to collectorManager : HibernateSearchMultiCollectorManager in method public createCollectors(indexSearcher IndexSearcher, originalLuceneQuery Query, sort Sort, metadataResolver IndexReaderMetadataResolver, maxDocs int, offset int, timeoutManager TimeoutManager, requestedTotalHitCountThreshold int) : LuceneCollectors from class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTOTAL_HIT_COUNT_KEY : CollectorKey<TotalHitCountCollector> to TOTAL_HIT_COUNT_KEY : CollectorKey<TotalHitCountCollector,Integer> in class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tTOP_DOCS_KEY : CollectorKey<TopDocsCollector<?>> to TOP_DOCS_KEY : CollectorKey<TopDocsCollector<?>,TopDocs> in class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcollectorsForAllMatchingDocs : CollectorSet to collectorsForAllMatchingDocs : HibernateSearchMultiCollectorManager in class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttopDocsDataCollector : TopDocsDataCollector<T> to collected : IntObjectMap<T> in method public collectTopDocsData(collectorFactory TopDocsDataCollector.Factory<T>, startInclusive int, endExclusive int) : List<T> from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttopDocsDataCollector : TopDocsDataCollector<T> to collected : IntObjectMap<T> in method public collectTopDocsData(collectorFactory TopDocsDataCollector.Factory<T>, startInclusive int, endExclusive int) : List<T> from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcollectorForTopDocsBuilder : CollectorSet.Builder to collectorForTopDocsBuilder : HibernateSearchMultiCollectorManager.Builder in method private buildTopDocsDataCollectors(collectorManagerFactory TopDocsDataCollector.Factory<T>) : HibernateSearchMultiCollectorManager from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollectorSet to HibernateSearchMultiCollectorManager in method private buildTopDocsDataCollectors(collectorManagerFactory TopDocsDataCollector.Factory<T>) : HibernateSearchMultiCollectorManager from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttotalHitCountCollector : TotalHitCountCollector to total : Integer in method private processCollectedMatchingDocs() : void from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttotalHitCountCollector : TotalHitCountCollector to total : Integer in method private processCollectedMatchingDocs() : void from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tTopDocsDataCollector<Object> to CollectorManager<TopDocsDataCollector<Object>,IntObjectMap<Object>> in method public create(context TopDocsDataCollectorExecutionContext) : CollectorManager<TopDocsDataCollector<Object>,IntObjectMap<Object>> from class org.hibernate.search.backend.lucene.search.query.impl.LuceneExtractableSearchResult.TopDocsDataCollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcomponents : Map<CollectorKey<?>,Collector> to components : Map<CollectorKey<?,?>,CollectorManager<Collector,?>> in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.Builder",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tpublic add(collectorFactory CollectorFactory<C,T,CM>) : void extracted from public addAll(collectorFactories Set<CollectorFactory<?>>) : void in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcollectorFactory : CollectorFactory<?> to collectorFactory : CollectorFactory<?,?,?> in method public addAll(collectorFactories Set<CollectorFactory<?,?,?>>) : void from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollectorSet to HibernateSearchMultiCollectorManager in method public build() : HibernateSearchMultiCollectorManager from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tC to T in method public get(key CollectorKey<C,T>) : T from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.MultiCollectedResults",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic getCollectorsForAllMatchingDocs() : CollectorSet renamed to public collectedMultiResults() : MultiCollectedResults in class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": false
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollectorSet to MultiCollectedResults in method public collectedMultiResults() : MultiCollectedResults from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": false
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic createCollector(context CollectorExecutionContext) : C renamed to public createCollectorManager(context CollectorExecutionContext) : CM in class org.hibernate.search.backend.lucene.lowlevel.collector.impl.CollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tC to CM in method public createCollectorManager(context CollectorExecutionContext) : CM from class org.hibernate.search.backend.lucene.lowlevel.collector.impl.CollectorFactory",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic get(key CollectorKey<C>) : C from class org.hibernate.search.backend.lucene.search.extraction.impl.CollectorSet to public get(key CollectorKey<C,T>) : T from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.MultiCollectedResults",
          "validation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tcollectorsForTopDocs : CollectorSet to collectorManager : HibernateSearchMultiCollectorManager in method public collectTopDocsData(collectorFactory TopDocsDataCollector.Factory<T>, startInclusive int, endExclusive int) : List<T> from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcollectorsForTopDocs : CollectorSet to collectorManager : HibernateSearchMultiCollectorManager in method public collectTopDocsData(collectorFactory TopDocsDataCollector.Factory<T>, startInclusive int, endExclusive int) : List<T> from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcomposed : Collector in method public collectMatchingDocs(offset int, limit Integer) : void from class org.hibernate.search.backend.lucene.search.extraction.impl.LuceneCollectors",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic createCollector(context CollectorExecutionContext) : FacetsCollector renamed to public createCollectorManager(context CollectorExecutionContext) : FacetsCollectorManager in class org.hibernate.search.backend.lucene.lowlevel.collector.impl.FacetsCollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tFacetsCollector to FacetsCollectorManager in method public createCollectorManager(context CollectorExecutionContext) : FacetsCollectorManager from class org.hibernate.search.backend.lucene.lowlevel.collector.impl.FacetsCollectorFactory",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttotalHitCountCollector : TotalHitCountCollector to totalHitCountCollectorManager : TotalHitCountCollectorManager in method public createCollectors(indexSearcher IndexSearcher, originalLuceneQuery Query, sort Sort, metadataResolver IndexReaderMetadataResolver, maxDocs int, offset int, timeoutManager TimeoutManager, requestedTotalHitCountThreshold int) : LuceneCollectors from class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttotalHitCountCollector : TotalHitCountCollector to totalHitCountCollectorManager : TotalHitCountCollectorManager in method public createCollectors(indexSearcher IndexSearcher, originalLuceneQuery Query, sort Sort, metadataResolver IndexReaderMetadataResolver, maxDocs int, offset int, timeoutManager TimeoutManager, requestedTotalHitCountThreshold int) : LuceneCollectors from class org.hibernate.search.backend.lucene.search.extraction.impl.ExtractionRequirements",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tcollector : Collector to collectorManager : CollectorManager<C,T> in method public add(collectorFactory CollectorFactory<C,T,CM>) : void from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.Builder",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tcollector : Collector to collectorManager : CollectorManager<C,T> in method public add(collectorFactory CollectorFactory<C,T,CM>) : void from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.Builder",
          "validation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tcomposed : Collector in method public build() : CollectorSet from class org.hibernate.search.backend.lucene.search.extraction.impl.CollectorSet.Builder",
          "validation": false
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcomponents : Map<CollectorKey<?>,Collector> to results : Map<CollectorKey<?,?>,Object> in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.MultiCollectedResults",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcomponents : Map<CollectorKey<?>,Collector> to results : Map<CollectorKey<?,?>,Object> in class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.MultiCollectedResults",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.backend.lucene.search.extraction.impl.CollectorSet moved and renamed to org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager.MultiCollectedResults",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate wrapTimeLimitingCollectorIfNecessary(collector Collector, timeoutManager TimeoutManager) : Collector from class org.hibernate.search.backend.lucene.search.extraction.impl.CollectorSet.Builder to private wrapTimeLimitingCollectorIfNecessary(collector Collector) : Collector from class org.hibernate.search.backend.lucene.search.extraction.impl.HibernateSearchMultiCollectorManager",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "ecd3967726378e5d50d5905e787596fa6c074031",
      "url": "https://github.com/hibernate/hibernate-search/commit/ecd3967726378e5d50d5905e787596fa6c074031",
      "commonRefactoring": [
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tcontainer : GenericContainer<?> in method private opensearch(dockerImageName DockerImageName) : GenericContainer<?> from class org.hibernate.search.util.impl.integrationtest.backend.elasticsearch.SearchBackendContainer",
          "validation": true
        }
      ],
      "ourApproach": [],
      "baseline": []
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "67c3402d72dfb225ae67c57f4bb3de684eb42c28",
      "url": "https://github.com/hibernate/hibernate-search/commit/67c3402d72dfb225ae67c57f4bb3de684eb42c28",
      "commonRefactoring": [
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(type Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.mapping.SearchMapping to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(type Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.session.SearchSession to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(types Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.orm.mapping.SearchMapping to public scope(classes Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(types Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.orm.session.SearchSession to public scope(classes Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.orm.mapping.SearchMapping to public scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.orm.session.SearchSession to public scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(type Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.orm.session.SearchSession to public scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(types Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(classes Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(types Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(classes Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.orm.mapping.SearchMapping to public scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(type Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider",
          "validation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.orm.scope.SearchScopeProvider from classes [org.hibernate.search.mapper.orm.mapping.SearchMapping, org.hibernate.search.mapper.orm.session.SearchSession]",
          "validation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider from classes [org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping, org.hibernate.search.mapper.pojo.standalone.session.SearchSession]",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.orm.scope.SearchScopeProvider from classes [org.hibernate.search.mapper.orm.mapping.SearchMapping, org.hibernate.search.mapper.orm.session.SearchSession, org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping, org.hibernate.search.mapper.pojo.standalone.session.SearchSession]",
          "validation": false
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.pojo.standalone.scope.SearchScopeProvider from classes [org.hibernate.search.mapper.orm.mapping.SearchMapping, org.hibernate.search.mapper.orm.session.SearchSession, org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping, org.hibernate.search.mapper.pojo.standalone.session.SearchSession]",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic schemaManager(types Collection<? extends Class<?>>) : SearchSchemaManager from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public schemaManager(classes Collection<? extends Class<?>>) : SearchSchemaManager from class org.hibernate.search.mapper.orm.session.SearchSession",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic workspace(types Collection<? extends Class<?>>) : SearchWorkspace from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public workspace(classes Collection<? extends Class<?>>) : SearchWorkspace from class org.hibernate.search.mapper.orm.session.SearchSession",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic massIndexer(types Collection<? extends Class<?>>) : MassIndexer from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public massIndexer(classes Collection<? extends Class<?>>) : MassIndexer from class org.hibernate.search.mapper.orm.session.SearchSession",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic massIndexer(types Collection<? extends Class<?>>) : MassIndexer from class org.hibernate.search.mapper.orm.session.SearchSession to public massIndexer(classes Collection<? extends Class<?>>) : MassIndexer from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic schemaManager(types Collection<? extends Class<?>>) : SearchSchemaManager from class org.hibernate.search.mapper.orm.session.SearchSession to public schemaManager(classes Collection<? extends Class<?>>) : SearchSchemaManager from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic workspace(types Collection<? extends Class<?>>) : SearchWorkspace from class org.hibernate.search.mapper.orm.session.SearchSession to public workspace(classes Collection<? extends Class<?>>) : SearchWorkspace from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(type Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(type Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.orm.mapping.SearchMapping to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.orm.session.SearchSession to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityName String) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(clazz Class<T>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(types Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(classes Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(types Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(classes Collection<? extends Class<? extends T>>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.SearchMapping to public scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.pojo.standalone.session.SearchSession to public scope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScope<T> from class org.hibernate.search.mapper.orm.scope.SearchScopeProvider",
          "validation": false
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "18e9cbf61c5047b600af919c9755a38b96afa9c2",
      "url": "https://github.com/hibernate/hibernate-search/commit/18e9cbf61c5047b600af919c9755a38b96afa9c2",
      "commonRefactoring": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.massindexing.MassIndexingBaseIT.Book",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tid : int to id : Integer in class org.hibernate.search.integrationtest.mapper.pojo.massindexing.MassIndexingEnvironmentIT.Entity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.massindexing.MassIndexingEnvironmentIT.Entity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.massindexing.MassIndexingInterruptionIT.Book",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.massindexing.MassIndexingMonitorIT.Book",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.massindexing.MassIndexingPrimitiveIdIT.EntityWithPrimitiveId",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tinstance1 : IndexedEntity to instance1 : IndexedEntityWithLoadingStrategyAndProjectionConstructor in method package withLoadingStrategy_withProjectionConstructor() : void from class org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tinstance2 : IndexedEntity to instance2 : IndexedEntityWithLoadingStrategyAndProjectionConstructor in method package withLoadingStrategy_withProjectionConstructor() : void from class org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tinstance3 : IndexedEntity to instance3 : IndexedEntityWithLoadingStrategyAndProjectionConstructor in method package withLoadingStrategy_withProjectionConstructor() : void from class org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\twithLoadingStrategyInstance : Model.IndexedEntityWithLoadingStrategy to withLoadingStrategyInstance : MultiTypeModel.IndexedEntityWithLoadingStrategy in method package multiType() : void from class org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\twithLoadingStrategyChildInstance : Model.IndexedEntityWithLoadingStrategyChild to withLoadingStrategyChildInstance : MultiTypeModel.IndexedEntityWithLoadingStrategyChild in method package multiType() : void from class org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\twithProjectionConstructorChildInstance : Model.IndexedEntityWithProjectionConstructorChild to withProjectionConstructorChildInstance : MultiTypeModel.IndexedEntityWithProjectionConstructorChild in method package multiType() : void from class org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\twithProjectionConstructorInstance : Model.IndexedEntityWithProjectionConstructor to withProjectionConstructorInstance : MultiTypeModel.IndexedEntityWithProjectionConstructor in method package multiType() : void from class org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.smoke.AnnotationMappingSmokeIT.IndexedEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.smoke.AnnotationMappingSmokeIT.OtherIndexedEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.smoke.AnnotationMappingSmokeIT.YetAnotherIndexedEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.smoke.ProgrammaticMappingSmokeIT.IndexedEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.smoke.ProgrammaticMappingSmokeIT.OtherIndexedEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.smoke.ProgrammaticMappingSmokeIT.YetAnotherIndexedEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.spatial.ProgrammaticMappingGeoPointBindingIT.GeoPointOnTypeEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.spatial.ProgrammaticMappingGeoPointBindingIT.GeoPointOnCoordinatesPropertyEntity",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tINDEX : String to NAME : String in class org.hibernate.search.integrationtest.mapper.pojo.spatial.ProgrammaticMappingGeoPointBindingIT.GeoPointOnCustomCoordinatesPropertyEntity",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage addEntity_configurer_inheritance() : void renamed to package binder_inheritance() : void in class org.hibernate.search.integrationtest.mapper.pojo.loading.EntityLoadingBinderInheritanceIT",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage addEntity_name_configurer_inheritance() : void renamed to package inheritance_explicitName() : void in class org.hibernate.search.integrationtest.mapper.pojo.loading.EntityLoadingBinderInheritanceIT",
          "validation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.search.integrationtest.mapper.pojo.loading.LoadingStrategyInheritanceIT renamed to org.hibernate.search.integrationtest.mapper.pojo.loading.EntityLoadingBinderInheritanceIT",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "MOVE_RENAME_ATTRIBUTE",
          "description": "Move And Rename Attribute\tprivate datastore : Map<Integer,Author> renamed to private authors : Map<Integer,Author> and moved from class org.hibernate.search.integrationtest.java.modules.pojo.standalone.elasticsearch.service.AuthorService to class org.hibernate.search.integrationtest.java.modules.pojo.standalone.elasticsearch.service.SimulatedDatastore",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_ATTRIBUTE",
          "description": "Move And Rename Attribute\tprivate datastore : Map<Integer,Author> renamed to private authors : Map<Integer,Author> and moved from class org.hibernate.search.integrationtest.java.modules.pojo.standalone.lucene.service.AuthorService to class org.hibernate.search.integrationtest.java.modules.pojo.standalone.lucene.service.SimulatedDatastore",
          "validation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage put(author Author) : void extracted from public add(name String) : void in class org.hibernate.search.integrationtest.java.modules.pojo.standalone.elasticsearch.service.AuthorService & moved to class org.hibernate.search.integrationtest.java.modules.pojo.standalone.elasticsearch.service.SimulatedDatastore",
          "validation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpackage put(author Author) : void extracted from public add(name String) : void in class org.hibernate.search.integrationtest.java.modules.pojo.standalone.lucene.service.AuthorService & moved to class org.hibernate.search.integrationtest.java.modules.pojo.standalone.lucene.service.SimulatedDatastore",
          "validation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.search.integrationtest.java.modules.pojo.standalone.elasticsearch.service.SimulatedDatastore from class org.hibernate.search.integrationtest.java.modules.pojo.standalone.elasticsearch.service.AuthorService",
          "validation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.search.integrationtest.java.modules.pojo.standalone.lucene.service.SimulatedDatastore from class org.hibernate.search.integrationtest.java.modules.pojo.standalone.lucene.service.AuthorService",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.integrationtest.mapper.pojo.loading.LoadingStrategyInheritanceIT.RootEntity moved to org.hibernate.search.integrationtest.mapper.pojo.loading.EntityLoadingBinderInheritanceIT.RootEntity",
          "validation": false
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.integrationtest.mapper.pojo.loading.LoadingStrategyInheritanceIT.DerivedEntity moved to org.hibernate.search.integrationtest.mapper.pojo.loading.EntityLoadingBinderInheritanceIT.DerivedEntity",
          "validation": false
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT.withLoadingStrategy_withProjectionConstructor.IndexedEntity moved to org.hibernate.search.integrationtest.mapper.pojo.mapping.definition.SearchEntityBaseIT.name_implicit.IndexedEntity",
          "validation": false
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT.multiType.Model moved and renamed to org.hibernate.search.integrationtest.mapper.pojo.search.loading.SearchQueryEntityLoadingFallbackToProjectionConstructorIT.MultiTypeModel",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tbuilder : null to b : null in method package setup() : void from class org.hibernate.search.integrationtest.mapper.pojo.work.PojoIndexingPlanBaseIT",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tc : null to ctx : null in method package binder_inheritance() : void from class org.hibernate.search.integrationtest.mapper.pojo.loading.EntityLoadingBinderInheritanceIT",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tc : null to ctx : null in method package inheritance_explicitName() : void from class org.hibernate.search.integrationtest.mapper.pojo.loading.EntityLoadingBinderInheritanceIT",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "6ca9589fbbdb343ce717420b9997be0b61a4d906",
      "url": "https://github.com/hibernate/hibernate-search/commit/6ca9589fbbdb343ce717420b9997be0b61a4d906",
      "commonRefactoring": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.documentation.mapper.pojo.standalone.loading.Book moved to org.hibernate.search.documentation.mapper.pojo.standalone.loading.mass.Book",
          "validation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.documentation.mapper.pojo.standalone.loading.MyMassLoadingStrategy moved to org.hibernate.search.documentation.mapper.pojo.standalone.loading.mass.MyMassLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.documentation.mapper.pojo.standalone.loading.MySelectionLoadingStrategy moved to org.hibernate.search.documentation.mapper.pojo.standalone.loading.selection.MySelectionLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.documentation.mapper.pojo.standalone.loading.StandalonePojoMassLoadingIT moved to org.hibernate.search.documentation.mapper.pojo.standalone.loading.mass.StandalonePojoMassLoadingIT",
          "validation": true
        },
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.documentation.mapper.pojo.standalone.loading.StandalonePojoSelectionLoadingIT moved to org.hibernate.search.documentation.mapper.pojo.standalone.loading.selection.StandalonePojoSelectionLoadingIT",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHibernateOrmEntityLoadingStrategy<? super E,I> to HibernateOrmEntityLoadingStrategy<?,?> in method public createLoadingStrategy(persistentClass PersistentClass, documentIdSourceProperty DocumentIdSourceProperty<I>) : HibernateOrmEntityLoadingStrategy<?,?> from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmEntityLoadingBinder",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tidentifierType : var in method private applyDefaults(mode IdentityMappingMode) : void from class org.hibernate.search.mapper.pojo.identity.impl.PojoRootIdentityMappingCollector",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tidentifierType : var in method private applyDefaults(mode IdentityMappingMode) : void from class org.hibernate.search.mapper.pojo.identity.impl.PojoRootIdentityMappingCollector",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tIdentifierMappingImplementor<T,E> to BoundIdentifierMapping<T,E> in method private unmappedIdentifier(modelPath BoundPojoModelPathPropertyNode<?,T>) : BoundIdentifierMapping<T,E> from class org.hibernate.search.mapper.pojo.identity.impl.PojoRootIdentityMappingCollector",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tloadingBinderOptional : var to loadingBinderRefOptional : var in method private preBuildOtherMetadata(builder AbstractPojoTypeManager.Builder<E>, helper PojoImplicitReindexingResolverBuildingHelper) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tidentifierMapping : IdentifierMappingImplementor<?,E> to identifierMapping : BoundIdentifierMapping<?,E> in class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tloadingBinder : Object to loadingBinderRef : ParameterizedBeanReference<?> in class org.hibernate.search.mapper.pojo.model.additionalmetadata.building.impl.PojoEntityTypeAdditionalMetadataBuilder",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tloadingBinder : Object to loadingBinderRef : ParameterizedBeanReference<?> in class org.hibernate.search.mapper.pojo.model.additionalmetadata.building.impl.PojoEntityTypeAdditionalMetadataBuilder",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic getLoadingBinder() : Object renamed to public getLoadingBinderRef() : ParameterizedBeanReference<?> in class org.hibernate.search.mapper.pojo.model.additionalmetadata.impl.PojoEntityTypeAdditionalMetadata",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tObject to ParameterizedBeanReference<?> in method public getLoadingBinderRef() : ParameterizedBeanReference<?> from class org.hibernate.search.mapper.pojo.model.additionalmetadata.impl.PojoEntityTypeAdditionalMetadata",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tloadingBinder : Object to loadingBinderRef : ParameterizedBeanReference<?> in class org.hibernate.search.mapper.pojo.model.additionalmetadata.impl.PojoEntityTypeAdditionalMetadata",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tloadingBinder : Object to loadingBinderRef : ParameterizedBeanReference<?> in class org.hibernate.search.mapper.pojo.model.additionalmetadata.impl.PojoEntityTypeAdditionalMetadata",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic contributeAdditionalMetadata(collector PojoAdditionalMetadataCollectorTypeNode) : void from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeMetadata to public contributeAdditionalMetadata(collector PojoAdditionalMetadataCollectorTypeNode) : void from class org.hibernate.search.mapper.pojo.mapping.definition.programmatic.impl.TypeMappingSearchEntityStepImpl",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic getTitle() : String from class org.hibernate.search.documentation.mapper.pojo.standalone.loading.Book to public getTitle() : String from class org.hibernate.search.documentation.mapper.pojo.standalone.entitydefinition.Book",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic setTitle(title String) : void from class org.hibernate.search.documentation.mapper.pojo.standalone.loading.Book to public setTitle(title String) : void from class org.hibernate.search.documentation.mapper.pojo.standalone.entitydefinition.Book",
          "validation": false
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tpackage entityName : String from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeMetadata to private entityName : String from class org.hibernate.search.mapper.pojo.mapping.definition.programmatic.impl.TypeMappingSearchEntityStepImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.search.documentation.mapper.pojo.standalone.entitydefinition.Book from class org.hibernate.search.documentation.mapper.pojo.standalone.loading.Book",
          "validation": false
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.search.mapper.pojo.identity.impl.BoundIdentifierMapping from class org.hibernate.search.mapper.pojo.identity.impl.PojoRootIdentityMappingCollector",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tidentifierMapping : IdentifierMappingImplementor<?,E> to identifierMapping : BoundIdentifierMapping<?,E> in class org.hibernate.search.mapper.pojo.identity.impl.PojoRootIdentityMappingCollector",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic rawType() : Class<?> from class org.hibernate.search.mapper.pojo.model.PojoModelValue to public rawType() : Class<?> from class org.hibernate.search.mapper.pojo.model.PojoModelElement",
          "validation": true
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpublic buildAndContributeTo(extendedMappingCollector PojoTypeExtendedMappingCollector<?>, mode IdentityMappingMode) : IdentifierMappingImplementor<?,E> moved from class org.hibernate.search.mapper.pojo.identity.impl.PojoRootIdentityMappingCollector to class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder & inlined to public preBuildIdentifierMapping(identityMappingMode IdentityMappingMode) : void",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdocumentIdSourceProperty : PojoPropertyModel<?> to documentIdSourceProperty : Optional<PojoPropertyModel<I>> in class org.hibernate.search.mapper.pojo.identity.impl.BoundIdentifierMapping",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate documentIdSourceProperty : PojoPropertyModel<?> from class org.hibernate.search.mapper.pojo.identity.impl.PojoRootIdentityMappingCollector to public documentIdSourceProperty : Optional<PojoPropertyModel<I>> from class org.hibernate.search.mapper.pojo.identity.impl.BoundIdentifierMapping",
          "validation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\tsearchMapping : CloseableSearchMapping in method package setup() : void from class org.hibernate.search.documentation.mapper.pojo.standalone.loading.StandalonePojoSelectionLoadingIT",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "6133c600d0fc15ce3482aaf9c3a29b4a222c98e8",
      "url": "https://github.com/hibernate/hibernate-search/commit/6133c600d0fc15ce3482aaf9c3a29b4a222c98e8",
      "commonRefactoring": [
        {
          "type": "MOVE_CLASS",
          "description": "Move Class\torg.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoLoadingContext.StandalonePojoSelectionLoadingStrategy moved to org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoSelectionLoadingStrategy",
          "validation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.search.mapper.orm.loading.impl.HibernateOrmMassLoadingOptions renamed to org.hibernate.search.mapper.orm.loading.impl.HibernateOrmMassLoadingContext",
          "validation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext.AbstractBuilder renamed to org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext.Builder",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.massindexing.spi.PojoMassIndexingEntityLoadingContext moved and renamed to org.hibernate.search.mapper.pojo.loading.spi.PojoMassEntityLoadingContext",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.standalone.mapping.metadata.impl.StandalonePojoEntityTypeMetadataProvider.EntityDefinition moved and renamed to org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeMetadata",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttypeContext : LoadingTypeContext<? extends E> to typeContext : PojoLoadingTypeContext<? extends E> in method public createQueryLoader(sessionFactory SessionFactoryImplementor, typeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, conditionalExpressions List<ConditionalExpression>, order String) : HibernateOrmQueryLoader<E,I> from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic createLoader(targetEntityTypeContexts Set<LoadingTypeContext<? extends E2>>, sessionContext LoadingSessionContext, cacheLookupStrategy EntityLoadingCacheLookupStrategy, loadingOptions MutableEntityLoadingOptions) : PojoSelectionEntityLoader<E2> renamed to public createEntityLoader(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, loadingContext HibernateOrmSelectionLoadingContext) : PojoSelectionEntityLoader<E> in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresult : PojoSelectionEntityLoader<E2> to result : PojoSelectionEntityLoader<E> in method public createEntityLoader(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, loadingContext HibernateOrmSelectionLoadingContext) : PojoSelectionEntityLoader<E> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoSelectionEntityLoader<E2> to PojoSelectionEntityLoader<E> in method public createEntityLoader(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, loadingContext HibernateOrmSelectionLoadingContext) : PojoSelectionEntityLoader<E> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttargetTypeContext : LoadingTypeContext<?> to targetTypeContext : PojoLoadingTypeContext<?> in method private toMostSpecificCommonEntitySuperType(sessionFactory SessionFactoryImplementor, targetEntityTypeContexts Iterable<? extends PojoLoadingTypeContext<?>>) : EntityMappingType from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\toptions : HibernateOrmMassLoadingOptions to options : HibernateOrmMassLoadingContext in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmMassEntityLoader",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\toptions : HibernateOrmMassLoadingOptions to options : HibernateOrmMassLoadingContext in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmMassIdentifierLoader",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic createLoader(targetEntityTypeContexts Set<LoadingTypeContext<? extends E2>>, sessionContext LoadingSessionContext, cacheLookupStrategy EntityLoadingCacheLookupStrategy, loadingOptions MutableEntityLoadingOptions) : PojoSelectionEntityLoader<E2> renamed to public createEntityLoader(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, loadingContext HibernateOrmSelectionLoadingContext) : PojoSelectionEntityLoader<E> in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoSelectionEntityLoader<E2> to PojoSelectionEntityLoader<E> in method public createEntityLoader(targetEntityTypeContexts Set<? extends PojoLoadingTypeContext<? extends E>>, loadingContext HibernateOrmSelectionLoadingContext) : PojoSelectionEntityLoader<E> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tresult : PojoSelectionEntityLoader<E2> to result : PojoSelectionEntityLoader<E> in method private doCreate(targetEntityTypeContext PojoLoadingTypeContext<? extends E>, sessionContext LoadingSessionContext, cacheLookupStrategy EntityLoadingCacheLookupStrategy, loadingOptions MutableEntityLoadingOptions) : PojoSelectionEntityLoader<E> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoSelectionEntityLoader<E2> to PojoSelectionEntityLoader<E> in method private doCreate(targetEntityTypeContext PojoLoadingTypeContext<? extends E>, sessionContext LoadingSessionContext, cacheLookupStrategy EntityLoadingCacheLookupStrategy, loadingOptions MutableEntityLoadingOptions) : PojoSelectionEntityLoader<E> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttargetEntityTypeContext : LoadingTypeContext<E> to targetEntityTypeContext : PojoLoadingTypeContext<E> in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmSelectionEntityByNonIdPropertyLoader",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tscopeDelegate : PojoScopeDelegate<org.hibernate.search.mapper.orm.common.EntityReference,T,HibernateOrmScopeIndexedTypeContext<? extends T>> to scopeDelegate : PojoScopeDelegate<org.hibernate.search.mapper.orm.common.EntityReference,T,SearchIndexedEntity<? extends T>> in method public createScope(classes Collection<? extends Class<? extends T>>) : SearchScopeImpl<T> from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmMapping",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tscopeDelegate : PojoScopeDelegate<org.hibernate.search.mapper.orm.common.EntityReference,T,HibernateOrmScopeIndexedTypeContext<? extends T>> to scopeDelegate : PojoScopeDelegate<org.hibernate.search.mapper.orm.common.EntityReference,T,SearchIndexedEntity<? extends T>> in method public createScope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScopeImpl<T> from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmMapping",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tindexedTypeContextBuilders : List<HibernateOrmIndexedTypeContext.Builder<?>> to indexed : List<HibernateOrmIndexedTypeContext.Builder<?>> in class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmTypeContextContainer.Builder",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tcontainedTypeContextBuilders : List<HibernateOrmContainedTypeContext.Builder<?>> to contained : List<HibernateOrmContainedTypeContext.Builder<?>> in class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmTypeContextContainer.Builder",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttype : null to typeId : null in method public conditionalExpression(typeContext PojoLoadingTypeContext<?>) : Optional<ConditionalExpression> from class org.hibernate.search.mapper.orm.massindexing.impl.HibernateOrmMassIndexingContext",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tmappingContext : HibernateOrmMassIndexingMappingContext to mapping : HibernateOrmMassIndexingMappingContext in class org.hibernate.search.mapper.orm.massindexing.impl.HibernateOrmMassIndexingContext",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdelegate : PojoScopeDelegate<org.hibernate.search.mapper.orm.common.EntityReference,E,HibernateOrmScopeIndexedTypeContext<? extends E>> to delegate : PojoScopeDelegate<org.hibernate.search.mapper.orm.common.EntityReference,E,SearchIndexedEntity<? extends E>> in class org.hibernate.search.mapper.orm.scope.impl.SearchScopeImpl",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttypeModel : PojoRawTypeModel<E> in method private preBuildOtherMetadata(builder AbstractPojoTypeManager.Builder<E>, helper PojoImplicitReindexingResolverBuildingHelper) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tindexingContext : PojoMassIndexingContext to massIndexingContext : PojoMassIndexingContext in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoDefaultMassIndexer",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tloadingStrategy : PojoMassIndexingLoadingStrategy<E,I> to loadingStrategy : PojoMassLoadingStrategy<E,I> in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingBatchIndexingWorkspace",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tloadingStrategy : PojoMassIndexingLoadingStrategy<E,I> to loadingStrategy : PojoMassLoadingStrategy<E,I> in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingEntityIdentifierLoadingRunnable",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tloadingStrategy : PojoMassIndexingLoadingStrategy<E,I> to loadingStrategy : PojoMassLoadingStrategy<E,I> in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingEntityLoadingRunnable",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tloadingStrategy : PojoMassIndexingLoadingStrategy<E,?> to loadingStrategy : PojoMassLoadingStrategy<E,?> in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoMassIndexingLoadingStrategy<E,?> to PojoMassLoadingStrategy<E,?> in method public loadingStrategy() : PojoMassLoadingStrategy<E,?> from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tincludedTypes : Set<LoadingTypeContext<? extends E>> to includedTypes : Set<? extends PojoLoadingTypeContext<? extends E>> in class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoLoadingTypeGroup",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tscopeDelegate : PojoScopeDelegate<EntityReference,T,StandalonePojoScopeIndexedTypeContext<? extends T>> to scopeDelegate : PojoScopeDelegate<EntityReference,T,SearchIndexedEntity<? extends T>> in method public createScope(classes Collection<? extends Class<? extends T>>) : SearchScopeImpl<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMapping",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tscopeDelegate : PojoScopeDelegate<EntityReference,T,StandalonePojoScopeIndexedTypeContext<? extends T>> to scopeDelegate : PojoScopeDelegate<EntityReference,T,SearchIndexedEntity<? extends T>> in method public createScope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScopeImpl<T> from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMapping",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttype : PojoRawTypeModel<?> to metadata : var in method public configure(buildContext MappingBuildContext, configurationContext PojoMappingConfigurationContext, configurationCollector MappingConfigurationCollector<PojoTypeMetadataContributor>) : void from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoTypeConfigurationContributor",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttype : PojoRawTypeModel<?> to metadata : var in method public configure(buildContext MappingBuildContext, configurationContext PojoMappingConfigurationContext, configurationCollector MappingConfigurationCollector<PojoTypeMetadataContributor>) : void from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoTypeConfigurationContributor",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tentityTypeMetadataProvider : StandalonePojoEntityTypeMetadataProvider to entityTypeMetadata : Collection<StandalonePojoEntityTypeMetadata<?>> in class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoTypeConfigurationContributor",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tentityTypeMetadataProvider : StandalonePojoEntityTypeMetadataProvider to entityTypeMetadata : Collection<StandalonePojoEntityTypeMetadata<?>> in class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoTypeConfigurationContributor",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdelegate : PojoScopeDelegate<EntityReference,E,StandalonePojoScopeIndexedTypeContext<? extends E>> to delegate : PojoScopeDelegate<EntityReference,E,SearchIndexedEntity<? extends E>> in class org.hibernate.search.mapper.pojo.standalone.scope.impl.SearchScopeImpl",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tother : EntityDefinition<E> to other : StandalonePojoEntityTypeMetadata<E> in method package mergeWith(unknownTypeOther StandalonePojoEntityTypeMetadata<?>) : StandalonePojoEntityTypeMetadata<E> from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeMetadata",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tEntityDefinition<E> to StandalonePojoEntityTypeMetadata<E> in method package mergeWith(unknownTypeOther StandalonePojoEntityTypeMetadata<?>) : StandalonePojoEntityTypeMetadata<E> from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeMetadata",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.massindexing.spi.PojoMassIndexingLoadingStrategy moved and renamed to org.hibernate.search.mapper.pojo.loading.spi.PojoMassLoadingStrategy",
          "validation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.pojo.loading.spi.PojoLoadingSessionContext from classes [org.hibernate.search.mapper.orm.loading.spi.LoadingSessionContext]",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tprivate handleMappingAborted(e MappingAbortedException) : void from class org.hibernate.search.engine.common.impl.SearchIntegrationBuilder.MappingBuildingState to public collectSilentlyAndCheck(failureCollector ContextualFailureCollector) : void from class org.hibernate.search.engine.mapper.mapping.building.spi.MappingAbortedException",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic ascendingSuperTypes() : List<PojoRawTypeIdentifier<? super E>> from class org.hibernate.search.mapper.orm.loading.spi.LoadingTypeContext to public ascendingSuperTypes() : List<PojoRawTypeIdentifier<? super E>> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic ascendingSuperTypes() : List<PojoRawTypeIdentifier<? super E>> from class org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext to public ascendingSuperTypes() : List<PojoRawTypeIdentifier<? super E>> from class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic sessionFactory() : SessionFactoryImplementor from class org.hibernate.search.mapper.orm.massindexing.impl.HibernateOrmMassIndexingMappingContext to public sessionFactory() : SessionFactoryImplementor from class org.hibernate.search.mapper.orm.loading.spi.LoadingMappingContext",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic sessionFactory() : SessionFactoryImplementor from class org.hibernate.search.mapper.orm.session.impl.HibernateOrmSearchSessionMappingContext to public sessionFactory() : SessionFactoryImplementor from class org.hibernate.search.mapper.orm.loading.spi.LoadingMappingContext",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic entityName() : String from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeContext to public entityName() : String from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic entityName() : String from class org.hibernate.search.mapper.pojo.search.loading.impl.PojoSearchLoadingIndexedTypeContext to public entityName() : String from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic entityName() : String from class org.hibernate.search.mapper.pojo.work.impl.PojoWorkTypeContext to public entityName() : String from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic mappedTypeContext(mappedTypeName String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMapping to public mappedTypeContext(name String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.pojo.mapping.impl.PojoMappingDelegateImpl",
          "validation": false
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttypeQueryLoader : HibernateOrmQueryLoader<E,I> to queryLoader : HibernateOrmQueryLoader<E,I> in method public createIdentifierLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoMassIdentifierLoadingContext<I>) : PojoMassIdentifierLoader from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic createIdentifierLoader(context PojoMassIndexingIdentifierLoadingContext<E,I>) : PojoMassIdentifierLoader from class org.hibernate.search.mapper.orm.massindexing.impl.HibernateOrmMassIndexingContext.HibernateOrmMassIndexingLoadingStrategy to public createIdentifierLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoMassIdentifierLoadingContext<I>) : PojoMassIdentifierLoader from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttypeQueryLoader : HibernateOrmQueryLoader<E,?> to queryLoader : HibernateOrmQueryLoader<E,?> in method public createEntityLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoMassEntityLoadingContext<E>) : PojoMassEntityLoader<I> from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic createEntityLoader(context PojoMassIndexingEntityLoadingContext<E>) : PojoMassEntityLoader<I> from class org.hibernate.search.mapper.orm.massindexing.impl.HibernateOrmMassIndexingContext.HibernateOrmMassIndexingLoadingStrategy to public createEntityLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoMassEntityLoadingContext<E>) : PojoMassEntityLoader<I> from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic contributeAdditionalMetadata(collector PojoAdditionalMetadataCollectorTypeNode) : void from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeContributor to public contributeAdditionalMetadata(collector PojoAdditionalMetadataCollectorTypeNode) : void from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeMetadata",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic runtimeIntrospector() : PojoRuntimeIntrospector from class org.hibernate.search.mapper.orm.loading.spi.LoadingSessionContext to public runtimeIntrospector() : PojoRuntimeIntrospector from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingSessionContext",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tthat : HibernateOrmSelectionLoadingStrategy<?,?> to that : StandalonePojoMassLoadingStrategy<?,?> in method public equals(o Object) : boolean from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": false
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic createLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>) : PojoSelectionEntityLoader<E> renamed to public createEntityLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoSelectionLoadingContext) : PojoSelectionEntityLoader<E> in class org.hibernate.search.mapper.pojo.loading.spi.PojoSelectionLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate introspector : StandalonePojoBootstrapIntrospector from class org.hibernate.search.mapper.pojo.standalone.mapping.metadata.impl.StandalonePojoEntityTypeMetadataProvider.Builder to private introspector : StandalonePojoBootstrapIntrospector from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMappingInitiator",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate log : Log from class org.hibernate.search.mapper.pojo.standalone.mapping.metadata.impl.StandalonePojoEntityTypeMetadataProvider to private log : Log from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoEntityTypeMetadata",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.massindexing.spi.PojoMassIndexingIdentifierLoadingContext moved and renamed to org.hibernate.search.mapper.pojo.loading.spi.PojoMassIdentifierLoadingContext",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.orm.loading.impl.HibernateOrmSelectionLoadingContext.HibernateOrmSelectionLoadingStrategy moved and renamed to org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": false
        }
      ],
      "ourApproach": [
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic Builder(name String) from class org.hibernate.search.mapper.pojo.standalone.mapping.metadata.impl.StandalonePojoEntityTypeMetadata.Builder to public Builder(mappingContext StandalonePojoMassIndexingMappingContext) from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoLoadingContext.Builder",
          "validation": false
        },
        {
          "type": "MOVE_RENAME_ATTRIBUTE",
          "description": "Move And Rename Attribute\tprivate entityDefinitionByType : Map<PojoRawTypeModel<?>,EntityDefinition<?>> renamed to private entityTypeMetadataByType : Map<PojoRawTypeModel<?>,StandalonePojoEntityTypeMetadata<?>> and moved from class org.hibernate.search.mapper.pojo.standalone.mapping.metadata.impl.StandalonePojoEntityTypeMetadataProvider.Builder to class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMappingInitiator",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tentityDefinitionByType : Map<PojoRawTypeModel<?>,EntityDefinition<?>> to entityTypeMetadataByType : Map<PojoRawTypeModel<?>,StandalonePojoEntityTypeMetadata<?>> in class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMappingInitiator",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpublic loadingStrategyOptional(type PojoLoadingTypeContext<T>) : Optional<PojoSelectionLoadingStrategy<? super T>> from class org.hibernate.search.mapper.pojo.loading.spi.PojoSelectionLoadingContext to public selectionLoadingStrategyOptional() : Optional<PojoSelectionLoadingStrategy<? super E>> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<PojoSelectionLoadingStrategy<? super T>> to Optional<PojoSelectionLoadingStrategy<? super E>> in method public selectionLoadingStrategyOptional() : Optional<PojoSelectionLoadingStrategy<? super E>> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic includedTypes() : Set<PojoRawTypeIdentifier<? extends E>> renamed to public parent() : PojoMassLoadingContext in class org.hibernate.search.mapper.pojo.loading.spi.PojoMassEntityLoadingContext",
          "validation": false
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<PojoRawTypeIdentifier<? extends E>> to PojoMassLoadingContext in method public parent() : PojoMassLoadingContext from class org.hibernate.search.mapper.pojo.loading.spi.PojoMassEntityLoadingContext",
          "validation": false
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpublic loadingStrategy(type PojoLoadingTypeContext<T>) : PojoSelectionLoadingStrategy<? super T> from class org.hibernate.search.mapper.pojo.loading.spi.PojoSelectionLoadingContext to public selectionLoadingStrategy() : PojoSelectionLoadingStrategy<? super E> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoSelectionLoadingStrategy<? super T> to PojoSelectionLoadingStrategy<? super E> in method public selectionLoadingStrategy() : PojoSelectionLoadingStrategy<? super E> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic includedTypes() : Set<PojoRawTypeIdentifier<? extends E>> renamed to public parent() : PojoMassLoadingContext in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingEntityIdentifierLoadingRunnable.LoadingContext",
          "validation": false
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<PojoRawTypeIdentifier<? extends E>> to PojoMassLoadingContext in method public parent() : PojoMassLoadingContext from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingEntityIdentifierLoadingRunnable.LoadingContext",
          "validation": false
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate delegate : MassLoadingStrategy<E,I> from class org.hibernate.search.mapper.pojo.standalone.massindexing.impl.StandalonePojoMassIndexingLoadingStrategy to private delegate : MassLoadingStrategy<E,I> from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic createIdentifierLoader(context PojoMassIndexingIdentifierLoadingContext<E,I>) : PojoMassIdentifierLoader from class org.hibernate.search.mapper.pojo.standalone.massindexing.impl.StandalonePojoMassIndexingLoadingStrategy to public createIdentifierLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoMassIdentifierLoadingContext<I>) : PojoMassIdentifierLoader from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": false
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic includedTypes() : Set<PojoRawTypeIdentifier<? extends E>> renamed to public parent() : PojoMassLoadingContext in class org.hibernate.search.mapper.pojo.loading.spi.PojoMassIdentifierLoadingContext",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<PojoRawTypeIdentifier<? extends E>> to PojoMassLoadingContext in method public parent() : PojoMassLoadingContext from class org.hibernate.search.mapper.pojo.loading.spi.PojoMassIdentifierLoadingContext",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tprivate createQueryLoader(sessionFactory SessionFactoryImplementor, typeContexts List<LoadingTypeContext<? extends E>>) : HibernateOrmQueryLoader<E,I> from class org.hibernate.search.mapper.orm.massindexing.impl.HibernateOrmMassIndexingContext.HibernateOrmMassIndexingLoadingStrategy to private conditionalExpressions(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context HibernateOrmMassLoadingContext) : List<ConditionalExpression> from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHibernateOrmQueryLoader<E,I> to List<ConditionalExpression> in method private conditionalExpressions(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context HibernateOrmMassLoadingContext) : List<ConditionalExpression> from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic includedTypes() : Set<PojoRawTypeIdentifier<? extends E>> renamed to public parent() : PojoMassLoadingContext in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingEntityLoadingRunnable.LoadingContext",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tSet<PojoRawTypeIdentifier<? extends E>> to PojoMassLoadingContext in method public parent() : PojoMassLoadingContext from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingEntityLoadingRunnable.LoadingContext",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic createLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>) : PojoSelectionEntityLoader<E> renamed to public createEntityLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoSelectionLoadingContext) : PojoSelectionEntityLoader<E> in class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoSelectionLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate ascendingSuperTypes : List<PojoRawTypeIdentifier<? super E>> from class org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext to private ascendingSuperTypes : List<PojoRawTypeIdentifier<? super E>> from class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic createEntityLoader(context PojoMassIndexingEntityLoadingContext<E>) : PojoMassEntityLoader<I> from class org.hibernate.search.mapper.pojo.standalone.massindexing.impl.StandalonePojoMassIndexingLoadingStrategy to public createEntityLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoMassEntityLoadingContext<E>) : PojoMassEntityLoader<I> from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": false
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpublic loadingStrategy(expectedType PojoRawTypeIdentifier<T>) : PojoMassIndexingLoadingStrategy<? super T,?> from class org.hibernate.search.mapper.pojo.massindexing.spi.PojoMassIndexingContext to public massLoadingStrategy() : PojoMassLoadingStrategy<? super E,?> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoMassIndexingLoadingStrategy<? super T,?> to PojoMassLoadingStrategy<? super E,?> in method public massLoadingStrategy() : PojoMassLoadingStrategy<? super E,?> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContext",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic mappedTypeContext(mappedTypeName String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmMapping to public mappedTypeContext(mappedTypeName String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.pojo.mapping.spi.AbstractPojoMappingImplementor",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic typeIdentifier() : PojoRawTypeIdentifier<E> from class org.hibernate.search.mapper.pojo.standalone.loading.impl.LoadingTypeContext to public typeIdentifier() : PojoRawTypeIdentifier<E> from class org.hibernate.search.mapper.pojo.standalone.work.impl.SearchIndexingPlanTypeContext",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic equals(obj Object) : boolean from class org.hibernate.search.mapper.orm.loading.spi.HibernateOrmEntityLoadingStrategy to public equals(obj Object) : boolean from class org.hibernate.search.mapper.pojo.loading.spi.PojoMassLoadingStrategy",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic hashCode() : int from class org.hibernate.search.mapper.orm.loading.spi.HibernateOrmEntityLoadingStrategy to public hashCode() : int from class org.hibernate.search.mapper.pojo.loading.spi.PojoMassLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpublic addEntityType(clazz Class<E>, entityName String, configurerOrNull EntityConfigurer<E>) : void moved from class org.hibernate.search.mapper.pojo.standalone.mapping.metadata.impl.StandalonePojoEntityTypeMetadataProvider.Builder to class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMappingInitiator & inlined to public addEntityType(clazz Class<E>, entityName String, configurerOrNull EntityConfigurer<E>) : StandalonePojoMappingInitiator",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tstrategy : PojoMassIndexingLoadingStrategy<? super E,?> to strategy : PojoMassLoadingStrategy<? super E,?> in method private single(mappingContext PojoMassIndexingMappingContext, typeContextProvider PojoMassIndexingTypeContextProvider, typeContext PojoMassIndexingIndexedTypeContext<E>, loadingContext PojoMassLoadingContext) : PojoMassIndexingIndexedTypeGroup<? super E> from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tentityName : String in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.orm.loading.impl.LoadingIndexedTypeContextProvider moved and renamed to org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContextProvider",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tascendingSuperTypes : List<PojoRawTypeIdentifier<? super E>> to delegate : PojoLoadingTypeContext<E> in class org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext",
          "validation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tascendingSuperTypes : List<PojoRawTypeIdentifier<? super E>> to delegate : PojoLoadingTypeContext<E> in class org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext",
          "validation": false
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tindexingContext : PojoMassIndexingContext to loadingContext : PojoMassLoadingContext in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tindexingContext : PojoMassIndexingContext to loadingContext : PojoMassLoadingContext in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup",
          "validation": true
        },
        {
          "type": "INLINE_VARIABLE",
          "description": "Inline Variable\ttypeContextOrNull : LoadingTypeContext<?> in method public includesInstance(entity Object) : boolean from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoLoadingTypeGroup",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tLoadingTypeContext<E> to PojoLoadingTypeContext<E> in method public forExactType(typeIdentifier PojoRawTypeIdentifier<E>) : PojoLoadingTypeContext<E> from class org.hibernate.search.mapper.pojo.loading.spi.PojoLoadingTypeContextProvider",
          "validation": true
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.pojo.loading.spi.PojoMassIdentifierLoadingContext from classes [org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingEntityIdentifierLoadingRunnable.LoadingContext]",
          "validation": false
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.pojo.loading.spi.PojoMassLoadingContext from classes [org.hibernate.search.mapper.pojo.massindexing.spi.PojoMassIndexingContext]",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic mappedTypeContext(mappedTypeName String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmMapping to public mappedTypeContext(name String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.pojo.mapping.impl.PojoMappingDelegateImpl",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic typeIdentifier() : PojoRawTypeIdentifier<E> from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeContext to public typeIdentifier() : PojoRawTypeIdentifier<E> from class org.hibernate.search.mapper.pojo.standalone.work.impl.SearchIndexingPlanTypeContext",
          "validation": false
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic loadingAvailable() : boolean from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoIndexedTypeContext to public loadingAvailable() : boolean from class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpublic createLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>) : PojoSelectionEntityLoader<E> from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoLoadingContext.StandalonePojoSelectionLoadingStrategy to public createEntityLoader(expectedTypes Set<? extends PojoLoadingTypeContext<? extends E>>, context PojoSelectionLoadingContext) : PojoSelectionEntityLoader<E> from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoSelectionLoadingStrategy",
          "validation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tthat : StandalonePojoMassIndexingLoadingStrategy<?,?> to that : StandalonePojoMassLoadingStrategy<?,?> in method public equals(o Object) : boolean from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": true
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpublic loadingStrategy(expectedType PojoRawTypeIdentifier<T>) : PojoMassIndexingLoadingStrategy<? super T,?> moved from class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoLoadingContext to class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup & inlined to private single(mappingContext PojoMassIndexingMappingContext, typeContextProvider PojoMassIndexingTypeContextProvider, typeContext PojoMassIndexingIndexedTypeContext<E>, loadingContext PojoMassLoadingContext) : PojoMassIndexingIndexedTypeGroup<? super E>",
          "validation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdelegate : HibernateOrmEntityLoadingStrategy<E,I> to delegate : MassLoadingStrategy<E,I> in class org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": false
        },
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.standalone.massindexing.impl.StandalonePojoMassIndexingLoadingStrategy moved and renamed to org.hibernate.search.mapper.pojo.standalone.loading.impl.StandalonePojoMassLoadingStrategy",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic mappedTypeContext(mappedTypeName String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMapping to public mappedTypeContext(mappedTypeName String) : ProjectionMappedTypeContext from class org.hibernate.search.mapper.pojo.mapping.spi.AbstractPojoMappingImplementor",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tstrategyOptional : Optional<MassLoadingStrategy<? super T,?>> to strategy : PojoMassLoadingStrategy<? super E,?> in method private single(mappingContext PojoMassIndexingMappingContext, typeContextProvider PojoMassIndexingTypeContextProvider, typeContext PojoMassIndexingIndexedTypeContext<E>, loadingContext PojoMassLoadingContext) : PojoMassIndexingIndexedTypeGroup<? super E> from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tstrategyOptional : Optional<MassLoadingStrategy<? super T,?>> to strategy : PojoMassLoadingStrategy<? super E,?> in method private single(mappingContext PojoMassIndexingMappingContext, typeContextProvider PojoMassIndexingTypeContextProvider, typeContext PojoMassIndexingIndexedTypeContext<E>, loadingContext PojoMassLoadingContext) : PojoMassIndexingIndexedTypeGroup<? super E> from class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingIndexedTypeGroup",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "d114775f2de0cb81684152bfe90898597f091947",
      "url": "https://github.com/hibernate/hibernate-search/commit/d114775f2de0cb81684152bfe90898597f091947",
      "commonRefactoring": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCriteriaTypeQueryFactory<E,?> to CriteriaTypeQueryFactory<E,I> in method public create(entityClass Class<E>, uniquePropertyType Class<I>, uniquePropertyName String, uniquePropertyIsTheEntityId boolean) : CriteriaTypeQueryFactory<E,I> from class org.hibernate.search.mapper.orm.loading.impl.CriteriaTypeQueryFactory",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tsession : SessionImplementor to session : var in method private doCreate(entityMappingType EntityMappingType, sessionContext LoadingSessionContext, cacheLookupStrategy EntityLoadingCacheLookupStrategy, loadingOptions MutableEntityLoadingOptions) : PojoSelectionEntityLoader<?> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tqueryFactory : TypeQueryFactory<?,?> to queryFactory : TypeQueryFactory<E,?> in method private create(rootClass RootClass, rootMappedClass Class<E>) : HibernateOrmEntityIdEntityLoadingStrategy<E,?> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdocumentIdSourceHandle : ValueReadHandle<?> to documentIdSourceHandle : ValueReadHandle<? extends I> in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tqueryFactory : TypeQueryFactory<?,I> to queryFactory : TypeQueryFactory<E,I> in method private create(persistentClass PersistentClass, mappedClass Class<E>, documentIdSourcePropertyClass Class<I>, documentIdSourcePropertyName String, documentIdSourceHandle ValueReadHandle<? extends I>) : HibernateOrmNonEntityIdPropertyEntityLoadingStrategy<E,I> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHibernateOrmEntityLoadingStrategy<?,?> to HibernateOrmNonEntityIdPropertyEntityLoadingStrategy<E,I> in method private create(persistentClass PersistentClass, mappedClass Class<E>, documentIdSourcePropertyClass Class<I>, documentIdSourcePropertyName String, documentIdSourceHandle ValueReadHandle<? extends I>) : HibernateOrmNonEntityIdPropertyEntityLoadingStrategy<E,I> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": false
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tentityMappingType : EntityMappingType to entityName : String in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tentityMappingType : EntityMappingType to entityName : String in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tTypeQueryFactory<?,?> to TypeQueryFactory<E,I> in method public create(entityClass Class<E>, ormEntityName String, uniquePropertyType Class<I>, uniquePropertyName String, uniquePropertyIsTheEntityId boolean) : TypeQueryFactory<E,I> from class org.hibernate.search.mapper.orm.loading.impl.TypeQueryFactory",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\thibernateOrmEntityName : String in method package addIndexed(typeModel PojoRawTypeModel<E>, jpaEntityName String) : HibernateOrmIndexedTypeContext.Builder<E> from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmTypeContextContainer.Builder",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\thibernateOrmEntityName : String in method package addContained(typeModel PojoRawTypeModel<E>, jpaEntityName String) : HibernateOrmContainedTypeContext.Builder<E> from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmTypeContextContainer.Builder",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\ttype : EntityDomainType<E> to entityClass : Class<E> in class org.hibernate.search.mapper.orm.loading.impl.CriteriaTypeQueryFactory",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttype : EntityDomainType<E> to entityClass : Class<E> in class org.hibernate.search.mapper.orm.loading.impl.CriteriaTypeQueryFactory",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate sessionFactory : SessionFactoryImplementor from class org.hibernate.search.mapper.orm.loading.impl.AbstractHibernateOrmLoadingStrategy to private sessionFactory : SessionFactoryImplementor from class org.hibernate.search.jakarta.batch.core.massindexing.util.impl.EntityTypeDescriptor",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate create(rootClass RootClass, rootMappedClass Class<E>) : HibernateOrmEntityIdEntityLoadingStrategy<E,?> extracted from public create(sessionFactory SessionFactoryImplementor, entityMappingType EntityMappingType) : HibernateOrmEntityLoadingStrategy<?,?> in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.search.mapper.orm.model.impl.DocumentIdSourceProperty from class org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext.AbstractBuilder",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHibernateOrmEntityLoadingStrategy<?,?> to HibernateOrmEntityIdEntityLoadingStrategy<E,?> in method private create(rootClass RootClass, rootMappedClass Class<E>) : HibernateOrmEntityIdEntityLoadingStrategy<E,?> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmEntityIdEntityLoadingStrategy",
          "validation": false
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tdocumentIdSourcePropertyName : String to documentIdSourceProperty : DocumentIdSourceProperty<?> in class org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext.AbstractBuilder",
          "validation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tdocumentIdSourcePropertyName : String to documentIdSourceProperty : DocumentIdSourceProperty<?> in class org.hibernate.search.mapper.orm.mapping.impl.AbstractHibernateOrmTypeContext.AbstractBuilder",
          "validation": false
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate create(persistentClass PersistentClass, mappedClass Class<E>, documentIdSourcePropertyClass Class<I>, documentIdSourcePropertyName String, documentIdSourceHandle ValueReadHandle<? extends I>) : HibernateOrmNonEntityIdPropertyEntityLoadingStrategy<E,I> extracted from public create(sessionFactory SessionFactoryImplementor, entityMappingType EntityMappingType, documentIdSourcePropertyName String, documentIdSourceHandle ValueReadHandle<I>) : HibernateOrmEntityLoadingStrategy<?,?> in class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHibernateOrmEntityLoadingStrategy<?,?> to HibernateOrmEntityLoadingStrategy<?,? super I> in method public create(persistentClass PersistentClass, documentIdSourceProperty DocumentIdSourceProperty<I>) : HibernateOrmEntityLoadingStrategy<?,? super I> from class org.hibernate.search.mapper.orm.loading.impl.HibernateOrmNonEntityIdPropertyEntityLoadingStrategy",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "9a25c9dd3e4af54c43878d224c27106384302d25",
      "url": "https://github.com/hibernate/hibernate-search/commit/9a25c9dd3e4af54c43878d224c27106384302d25",
      "commonRefactoring": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tprivate buildAndAddContainedTypeManagerTo(typeManagerContainerBuilder PojoTypeManagerContainer.Builder, reindexingResolverBuildingHelper PojoImplicitReindexingResolverBuildingHelper, entityType PojoRawTypeModel<T>) : void renamed to private preBuildIfContained(entityType PojoRawTypeModel<E>, reindexingResolverBuildingHelper PojoImplicitReindexingResolverBuildingHelper) : void in class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\ttypeManagerContainer : var in method public prepareBuild() : MPBS from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tpojoIndexedTypeManagerBuilder : PojoIndexedTypeManagerBuilder<?> to builder : PojoIndexedTypeManager.Builder<?> in method public prepareBuild() : MPBS from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tentry : Map.Entry<PojoRawTypeModel<?>,PojoIndexedTypeManagerBuilder<?>> to builder : PojoIndexedTypeManager.Builder<?> in method public prepareBuild() : MPBS from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tpojoIndexedTypeManagerBuilder : PojoIndexedTypeManagerBuilder<?> to builder : PojoIndexedTypeManager.Builder<?> in method public prepareBuild() : MPBS from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tentry : Map.Entry<PojoRawTypeModel<?>,PojoIndexedTypeManagerBuilder<?>> to builder : PojoIndexedTypeManager.Builder<?> in method public prepareBuild() : MPBS from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\treindexingResolverOptional : Optional<? extends PojoImplicitReindexingResolver<T>> to reindexingResolverOptional : Optional<? extends PojoImplicitReindexingResolver<E>> in method private preBuildIfContained(entityType PojoRawTypeModel<E>, reindexingResolverBuildingHelper PojoImplicitReindexingResolverBuildingHelper) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\textendedMappingCollector : PojoContainedTypeExtendedMappingCollector to extendedMappingCollector : var in method private preBuildIfContained(entityType PojoRawTypeModel<E>, reindexingResolverBuildingHelper PojoImplicitReindexingResolverBuildingHelper) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tidentityMappingCollector : PojoRootIdentityMappingCollector<T> to identityMappingCollector : var in method private preBuildIfContained(entityType PojoRawTypeModel<E>, reindexingResolverBuildingHelper PojoImplicitReindexingResolverBuildingHelper) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoContainedTypeManager<I,E> to PojoContainedTypeManager<?,E> in method public build() : PojoContainedTypeManager<?,E> from class org.hibernate.search.mapper.pojo.mapping.impl.PojoContainedTypeManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tPojoIndexedTypeManager<I,E> to PojoIndexedTypeManager<?,E> in method public build() : PojoIndexedTypeManager<?,E> from class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tcontained : List<PojoContainedTypeManager<?,?>> to contained : Map<PojoRawTypeModel<?>,PojoContainedTypeManager.Builder<?>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tprivate registerSuperTypes(bySuperType Map<PojoRawTypeIdentifier<?>,Set<T>>, entityType PojoRawTypeModel<?>, value T) : void from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder to private registerSuperTypes(bySuperType Map<PojoRawTypeIdentifier<?>,Set<T>>, entityType PojoRawTypeModel<?>, value T) : void from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tvoid to PojoContainedTypeManager.Builder<E> in method public addContained(typeModel PojoRawTypeModel<E>, entityName String, identityMappingCollector PojoRootIdentityMappingCollector<E>, extendedMappingCollector PojoContainedTypeExtendedMappingCollector) : PojoContainedTypeManager.Builder<E> from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate extendedMappingCollector : PojoIndexedTypeExtendedMappingCollector from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoIndexedTypeManagerBuilder to public extendedMappingCollector : PojoIndexedTypeExtendedMappingCollector from class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate routingBridge : BoundRoutingBridge<E> from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoIndexedTypeManagerBuilder to public routingBridge : BoundRoutingBridge<E> from class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate indexManagerBuilder : MappedIndexManagerBuilder from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoIndexedTypeManagerBuilder to private indexManagerBuilder : MappedIndexManagerBuilder from class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tsingleConcreteTypeInEntityHierarchy : boolean to singleConcreteTypeInEntityHierarchy : Boolean in class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tAbstractPojoTypeManager<I,E> to AbstractPojoTypeManager<?,E> in method public abstract build() : AbstractPojoTypeManager<?,E> from class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate identityMappingCollector : PojoRootIdentityMappingCollector<E> from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoIndexedTypeManagerBuilder to private identityMappingCollector : PojoRootIdentityMappingCollector<E> from class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder",
          "validation": true
        },
        {
          "type": "MOVE_RENAME_ATTRIBUTE",
          "description": "Move And Rename Attribute\tprivate indexedTypeManagerBuilders : Map<PojoRawTypeModel<?>,PojoIndexedTypeManagerBuilder<?>> renamed to public indexed : Map<PojoRawTypeModel<?>,PojoIndexedTypeManager.Builder<?>> and moved from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper to class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tindexedTypeManagerBuilders : Map<PojoRawTypeModel<?>,PojoIndexedTypeManagerBuilder<?>> to indexed : Map<PojoRawTypeModel<?>,PojoIndexedTypeManager.Builder<?>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": false
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tprocessor : PojoIndexingProcessor<E> to indexingProcessor : PojoIndexingProcessor<E> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": true
        },
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.AbstractBuilder renamed to org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate closed : boolean from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoIndexedTypeManagerBuilder to protected closed : boolean from class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tvoid to PojoIndexedTypeManager.Builder<E> in method public addIndexed(typeModel PojoRawTypeModel<E>, entityName String, identityMappingCollector PojoRootIdentityMappingCollector<E>, extendedMappingCollector PojoIndexedTypeExtendedMappingCollector, routingBridge BoundRoutingBridge<E>, indexingProcessorBuilder PojoIndexingProcessorOriginalTypeNodeBuilder<E>, indexManagerBuilder MappedIndexManagerBuilder) : PojoIndexedTypeManager.Builder<E> from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tbuilder : PojoIndexedTypeManagerBuilder<E> to extendedMappingCollector : var in method private mapIndexedType(indexedEntityType PojoRawTypeModel<E>, indexManagerFactory MappedIndexManagerFactory) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tbuilder : PojoIndexedTypeManagerBuilder<E> to extendedMappingCollector : var in method private mapIndexedType(indexedEntityType PojoRawTypeModel<E>, indexManagerFactory MappedIndexManagerFactory) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttypeManager : PojoContainedTypeManager<?,?> to typeManager : var in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": false
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttypeManager : PojoIndexedTypeManager<?,?> to typeManager : var in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": false
        }
      ],
      "baseline": [
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\textendedMappingCollector : var in method private mapIndexedType(indexedEntityType PojoRawTypeModel<E>, indexManagerFactory MappedIndexManagerFactory) : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tprocessor : PojoIndexingProcessor<E> to indexingProcessorBuilder : PojoIndexingProcessorOriginalTypeNodeBuilder<E> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tprocessor : PojoIndexingProcessor<E> to indexingProcessorBuilder : PojoIndexingProcessorOriginalTypeNodeBuilder<E> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tindexed : List<PojoIndexedTypeManager<?,?>> to indexed : Map<PojoRawTypeModel<?>,PojoIndexedTypeManager.Builder<?>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttypeManager : PojoContainedTypeManager<?,?> to typeManagerBuilder : PojoContainedTypeManager.Builder<?> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttypeManager : PojoIndexedTypeManager<?,?> to typeManagerBuilder : PojoIndexedTypeManager.Builder<?> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttypeManager : PojoContainedTypeManager<?,?> to typeManagerBuilder : PojoContainedTypeManager.Builder<?> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttypeManager : PojoIndexedTypeManager<?,?> to typeManagerBuilder : PojoIndexedTypeManager.Builder<?> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpackage closeOnFailure() : void from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoIndexedTypeManagerBuilder to protected doCloseOnFailure(closer Closer<RuntimeException>) : void from class org.hibernate.search.mapper.pojo.mapping.impl.PojoIndexedTypeManager.Builder",
          "validation": false
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tidentifierMapping : IdentifierMappingImplementor<I,E> to identifierMapping : IdentifierMappingImplementor<?,E> in class org.hibernate.search.mapper.pojo.mapping.impl.AbstractPojoTypeManager.Builder",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "8c37bc87c1ce76545c8fb8e3ee9c45ed62260d46",
      "url": "https://github.com/hibernate/hibernate-search/commit/8c37bc87c1ce76545c8fb8e3ee9c45ed62260d46",
      "commonRefactoring": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage target_byClass_invalidClass() : void renamed to package target_byClass_invalidClass_noEntitySubType() : void in class org.hibernate.search.integrationtest.mapper.orm.search.SearchQueryBaseIT",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage target_byClass_invalidClass() : void renamed to package target_byClass_invalidClass_noEntitySubType() : void in class org.hibernate.search.integrationtest.mapper.pojo.search.SearchQueryBaseIT",
          "validation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate doCreateScope(typeIdentifiers Collection<PojoRawTypeIdentifier<? extends T>>) : SearchScopeImpl<T> inlined to public createScope(classes Collection<? extends Class<? extends T>>) : SearchScopeImpl<T> in class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmMapping",
          "validation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate doCreateScope(typeIdentifiers Collection<PojoRawTypeIdentifier<? extends T>>) : SearchScopeImpl<T> inlined to public createScope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScopeImpl<T> in class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmMapping",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\ttypeIdentifier : PojoRawTypeIdentifier<?> to persistentClass : PersistentClass in method public typeModel(name String) : AbstractPojoRawTypeModel<?,?> from class org.hibernate.search.mapper.orm.model.impl.HibernateOrmBootstrapIntrospector",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttypeIdentifier : PojoRawTypeIdentifier<?> to persistentClass : PersistentClass in method public typeModel(name String) : AbstractPojoRawTypeModel<?,?> from class org.hibernate.search.mapper.orm.model.impl.HibernateOrmBootstrapIntrospector",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\ttypeContextProvider : HibernateOrmRuntimeIntrospectorTypeContextProvider to typeIdentifierResolver : PojoRawTypeIdentifierResolver in class org.hibernate.search.mapper.orm.model.impl.HibernateOrmRuntimeIntrospector",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\ttypeContextProvider : HibernateOrmRuntimeIntrospectorTypeContextProvider to typeIdentifierResolver : PojoRawTypeIdentifierResolver in class org.hibernate.search.mapper.orm.model.impl.HibernateOrmRuntimeIntrospector",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic allByNonInterfaceSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Set<? extends PojoWorkTypeContext<?,? extends E>> renamed to public forNonInterfaceSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Set<? extends PojoWorkTypeContext<?,? extends E>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tindexedBySuperType : Map<PojoRawTypeIdentifier<?>,Set<? extends PojoIndexedTypeManager<?,?>>> to indexedBySuperType : KeyValueProvider<PojoRawTypeIdentifier<?>,Set<? extends PojoIndexedTypeManager<?,?>>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tallIndexed : Collection<PojoIndexedTypeManager<?,?>> to allIndexed : Set<PojoIndexedTypeManager<?,?>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tCollection<PojoIndexedTypeManager<?,?>> to Set<PojoIndexedTypeManager<?,?>> in method package allIndexed() : Set<PojoIndexedTypeManager<?,?>> from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tallByNonInterfaceSuperType : KeyValueProvider<PojoRawTypeIdentifier<?>,Set<? extends AbstractPojoTypeManager<?,?>>> to byNonInterfaceSuperType : KeyValueProvider<PojoRawTypeIdentifier<?>,Set<? extends AbstractPojoTypeManager<?,?>>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate doCreateScope(typeIdentifiers Collection<PojoRawTypeIdentifier<? extends T>>) : SearchScopeImpl<T> inlined to public createScope(classes Collection<? extends Class<? extends T>>) : SearchScopeImpl<T> in class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMapping",
          "validation": true
        },
        {
          "type": "INLINE_OPERATION",
          "description": "Inline Method\tprivate doCreateScope(typeIdentifiers Collection<PojoRawTypeIdentifier<? extends T>>) : SearchScopeImpl<T> inlined to public createScope(expectedSuperType Class<T>, entityNames Collection<String>) : SearchScopeImpl<T> in class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMapping",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate KeyValueProvider(content Map<K,? extends V>, singleMissingValueExceptionFactory BiFunction<? super K,? super Set<K>,SearchException>, multiMissingValueExceptionFactory BiFunction<? super Set<K>,? super Set<K>,SearchException>) extracted from public KeyValueProvider(content Map<K,? extends V>, missingValueExceptionFactory BiFunction<? super K,? super Set<K>,SearchException>) in class org.hibernate.search.util.common.data.spi.KeyValueProvider",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<V> to Optional<? extends V> in method public getOptional(key K) : Optional<? extends V> from class org.hibernate.search.util.common.data.spi.KeyValueProvider",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tmissingValueExceptionFactory : BiFunction<? super K,? super Set<K>,SearchException> to singleMissingValueExceptionFactory : BiFunction<? super K,? super Set<K>,SearchException> in class org.hibernate.search.util.common.data.spi.KeyValueProvider",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic multipleEntityTypesWithSameName(entityName String, previousType PojoRawTypeModel<?>, type PojoRawTypeModel<?>) : SearchException from class org.hibernate.search.mapper.pojo.standalone.logging.impl.Log to public multipleEntityTypesWithSameName(entityName String, previousType PojoRawTypeModel<?>, type PojoRawTypeModel<?>) : SearchException from class org.hibernate.search.mapper.pojo.logging.impl.Log",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic invalidEntitySuperType(entityName String, expectedSuperType Class<?>, actualJavaType Class<?>) : SearchException from class org.hibernate.search.mapper.pojo.standalone.logging.impl.Log to public invalidEntitySuperType(entityName String, expectedSuperType Class<?>, actualJavaType Class<?>) : SearchException from class org.hibernate.search.mapper.pojo.logging.impl.Log",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic allIndexedForSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Optional<? extends Set<? extends PojoScopeIndexedTypeContext<?,? extends E>>> renamed to public indexedForSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Optional<? extends Set<? extends PojoIndexedTypeManager<?,? extends E>>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tOptional<? extends Set<? extends PojoScopeIndexedTypeContext<?,? extends E>>> to Optional<? extends Set<? extends PojoIndexedTypeManager<?,? extends E>>> in method public indexedForSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Optional<? extends Set<? extends PojoIndexedTypeManager<?,? extends E>>> from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic allIndexedForSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Optional<? extends Set<? extends PojoMassIndexingIndexedTypeContext<? extends E>>> renamed to public indexedForSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Optional<? extends Set<? extends PojoMassIndexingIndexedTypeContext<? extends E>>> in class org.hibernate.search.mapper.pojo.massindexing.impl.PojoMassIndexingTypeContextProvider",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic allByNonInterfaceSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Set<? extends PojoWorkTypeContext<?,? extends E>> renamed to public forNonInterfaceSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Set<? extends PojoWorkTypeContext<?,? extends E>> in class org.hibernate.search.mapper.pojo.scope.impl.PojoScopeTypeContextProvider",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic allIndexedForSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Optional<? extends Set<? extends PojoScopeIndexedTypeContext<?,? extends E>>> renamed to public indexedForSuperType(typeIdentifier PojoRawTypeIdentifier<E>) : Optional<? extends Set<? extends PojoScopeIndexedTypeContext<?,? extends E>>> in class org.hibernate.search.mapper.pojo.scope.impl.PojoScopeTypeContextProvider",
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic unknownEntityNameForAnyEntityByName(invalidName String, validNames Collection<String>) : SearchException renamed to public unknownEntityName(invalidName String, validNames Collection<String>) : SearchException in class org.hibernate.search.mapper.pojo.logging.impl.Log",
          "validation": true
        },
        {
          "type": "RENAME_ATTRIBUTE",
          "description": "Rename Attribute\tallByNonInterfaceSuperType : Map<PojoRawTypeIdentifier<?>,Set<AbstractPojoTypeManager<?,?>>> to bySuperType : Map<PojoRawTypeIdentifier<?>,Set<AbstractPojoTypeManager<?,?>>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "MOVE_AND_RENAME_OPERATION",
          "description": "Move And Rename Method\tpublic typeIdentifierResolver() : HibernateOrmRawTypeIdentifierResolver from class org.hibernate.search.mapper.orm.model.impl.HibernateOrmRuntimeIntrospectorTypeContextProvider to public typeIdentifierBySecondaryEntityName() : KeyValueProvider<String,PojoRawTypeIdentifier<?>> from class org.hibernate.search.mapper.pojo.mapping.spi.PojoRawTypeIdentifierResolver",
          "validation": true
        },
        {
          "type": "CHANGE_RETURN_TYPE",
          "description": "Change Return Type\tHibernateOrmRawTypeIdentifierResolver to KeyValueProvider<String,PojoRawTypeIdentifier<?>> in method public typeIdentifierBySecondaryEntityName() : KeyValueProvider<String,PojoRawTypeIdentifier<?>> from class org.hibernate.search.mapper.pojo.mapping.spi.PojoRawTypeIdentifierResolver",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic unknownSupertypeTypeIdentifier(typeIdentifier PojoRawTypeIdentifier<?>, availableTypeIdentifiers Set<PojoRawTypeIdentifier<?>>) : SearchException renamed to public unknownNonInterfaceSuperTypeIdentifier(typeIdentifier PojoRawTypeIdentifier<?>, availableTypeIdentifiers Set<PojoRawTypeIdentifier<?>>) : SearchException in class org.hibernate.search.mapper.pojo.logging.impl.Log",
          "validation": true
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate log : Log from class org.hibernate.search.mapper.pojo.standalone.mapping.impl.StandalonePojoMapping to private log : Log from class org.hibernate.search.mapper.pojo.mapping.impl.PojoMappingDelegateImpl",
          "validation": true
        },
        {
          "type": "PUSH_DOWN_OPERATION",
          "description": "Push Down Method\tpublic typeIdentifierByEntityName() : KeyValueProvider<String,PojoRawTypeIdentifier<?>> from class org.hibernate.search.mapper.pojo.work.impl.PojoWorkTypeContextProvider to public nonInterfaceSuperTypeIdentifierByEntityName() : KeyValueProvider<String,PojoRawTypeIdentifier<?>> from class org.hibernate.search.mapper.pojo.scope.impl.PojoScopeTypeContextProvider",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate registerSuperTypes(bySuperType Map<PojoRawTypeIdentifier<?>,Set<T>>, entityType PojoRawTypeModel<?>, value T) : void extracted from public addIndexed(typeModel PojoRawTypeModel<E>, typeManager PojoIndexedTypeManager<?,E>) : void in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "EXTRACT_OPERATION",
          "description": "Extract Method\tprivate registerSuperTypes(bySuperType Map<PojoRawTypeIdentifier<?>,Set<T>>, entityType PojoRawTypeModel<?>, value T) : void extracted from public addContained(typeModel PojoRawTypeModel<E>, typeManager PojoContainedTypeManager<?,E>) : void in class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "EXTRACT_CLASS",
          "description": "Extract Class\torg.hibernate.search.mapper.pojo.mapping.spi.PojoRawTypeIdentifierResolver from class org.hibernate.search.mapper.orm.model.impl.HibernateOrmRuntimeIntrospectorTypeContextProvider",
          "validation": true
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpackage createClassTypeIdentifier(javaClass Class<T>) : PojoRawTypeIdentifier<T> moved from class org.hibernate.search.mapper.orm.model.impl.HibernateOrmRawTypeIdentifierResolver to class org.hibernate.search.mapper.orm.model.impl.HibernateOrmBootstrapIntrospector & inlined to private createClassTypeModel(type Class<T>) : HibernateOrmClassRawTypeModel<T>",
          "validation": true
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpackage createDynamicMapTypeIdentifier(name String) : PojoRawTypeIdentifier<Map> moved from class org.hibernate.search.mapper.orm.model.impl.HibernateOrmRawTypeIdentifierResolver to class org.hibernate.search.mapper.orm.model.impl.HibernateOrmBootstrapIntrospector & inlined to private createDynamicMapTypeModel(name String) : HibernateOrmDynamicMapRawTypeModel",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\ttypedIdentifier : PojoRawTypeIdentifier<?> to typeIdentifier : PojoRawTypeIdentifier<?> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tallNonInterfaceSuperTypesClassesContent : Set<Class<?>> to indexedBySuperTypeClassContent : Map<Class<?>,Set<PojoIndexedTypeManager<?,?>>> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "CHANGE_VARIABLE_TYPE",
          "description": "Change Variable Type\tallNonInterfaceSuperTypesClassesContent : Set<Class<?>> to indexedBySuperTypeClassContent : Map<Class<?>,Set<PojoIndexedTypeManager<?,?>>> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tindexedBySuperTypeContent : Map<PojoRawTypeIdentifier<?>,Set<PojoIndexedTypeManager<?,?>>> in method private PojoTypeManagerContainer(builder Builder) from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tmetadata : var in method public prepareBuild() : MPBS from class org.hibernate.search.mapper.pojo.mapping.building.impl.PojoMapper",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage target_byName_multipleTypes() : void renamed to package target_byClass_invalidClass_noIndexedSubtype() : void in class org.hibernate.search.integrationtest.mapper.orm.search.SearchQueryBaseIT",
          "validation": false
        },
        {
          "type": "EXTRACT_INTERFACE",
          "description": "Extract Interface\torg.hibernate.search.mapper.pojo.mapping.spi.PojoRawTypeIdentifierResolver from classes [org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer, org.hibernate.search.mapper.pojo.work.impl.PojoWorkTypeContextProvider]",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic invalidEntitySuperType(entityName String, expectedSuperType Class<?>, actualJavaType Class<?>) : SearchException from class org.hibernate.search.mapper.orm.logging.impl.Log to public invalidEntitySuperType(entityName String, expectedSuperType Class<?>, actualJavaType Class<?>) : SearchException from class org.hibernate.search.mapper.pojo.logging.impl.Log",
          "validation": true
        },
        {
          "type": "PULL_UP_OPERATION",
          "description": "Pull Up Method\tpublic typeIdentifierByEntityName() : KeyValueProvider<String,PojoRawTypeIdentifier<?>> from class org.hibernate.search.mapper.pojo.work.impl.PojoWorkTypeContextProvider to public typeIdentifierByEntityName() : KeyValueProvider<String,PojoRawTypeIdentifier<?>> from class org.hibernate.search.mapper.pojo.mapping.spi.PojoRawTypeIdentifierResolver",
          "validation": true
        },
        {
          "type": "EXTRACT_AND_MOVE_OPERATION",
          "description": "Extract And Move Method\tpublic create(mappingContext PojoScopeMappingContext, typeContextProvider PojoScopeTypeContextProvider, targetedTypeContexts Set<? extends PojoScopeIndexedTypeContext<?,? extends E>>, indexedTypeExtendedContextProvider PojoScopeTypeExtendedContextProvider<E,C>) : PojoScopeDelegate<R,E,C> extracted from public createPojoAllScope(mappingContext PojoScopeMappingContext, indexedTypeExtendedContextProvider PojoScopeTypeExtendedContextProvider<Object,C>) : Optional<PojoScopeDelegate<R,Object,C>> in class org.hibernate.search.mapper.pojo.mapping.impl.PojoMappingDelegateImpl & moved to class org.hibernate.search.mapper.pojo.scope.impl.PojoScopeDelegateImpl",
          "validation": false
        },
        {
          "type": "MOVE_AND_INLINE_OPERATION",
          "description": "Move And Inline Method\tpublic create(mappingContext PojoScopeMappingContext, typeContextProvider PojoScopeTypeContextProvider, targetedTypes Collection<? extends PojoRawTypeIdentifier<? extends E>>, indexedTypeExtendedContextProvider PojoScopeTypeExtendedContextProvider<E,C>) : PojoScopeDelegate<R,E,C> moved from class org.hibernate.search.mapper.pojo.scope.impl.PojoScopeDelegateImpl to class org.hibernate.search.mapper.pojo.mapping.impl.PojoMappingDelegateImpl & inlined to public createPojoScope(mappingContext PojoScopeMappingContext, targetedTypes Collection<? extends PojoRawTypeIdentifier<? extends E>>, indexedTypeExtendedContextProvider PojoScopeTypeExtendedContextProvider<E,C>) : PojoScopeDelegate<R,E,C>",
          "validation": false
        },
        {
          "type": "MOVE_ATTRIBUTE",
          "description": "Move Attribute\tprivate log : Log from class org.hibernate.search.mapper.pojo.scope.impl.PojoScopeDelegateImpl to private log : Log from class org.hibernate.search.mapper.pojo.mapping.impl.PojoMappingDelegateImpl",
          "validation": true
        },
        {
          "type": "RENAME_VARIABLE",
          "description": "Rename Variable\tclazz : null to superTypeIdentifier : null in method private registerSuperTypes(bySuperType Map<PojoRawTypeIdentifier<?>,Set<T>>, entityType PojoRawTypeModel<?>, value T) : void from class org.hibernate.search.mapper.pojo.mapping.impl.PojoTypeManagerContainer.Builder",
          "validation": true
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpublic invalidScopeTarget(nonIndexedTypes Collection<PojoRawTypeIdentifier<?>>, validSuperTypes Collection<PojoRawTypeIdentifier<?>>) : SearchException renamed to public invalidIndexedSuperTypes(nonIndexedTypes Collection<PojoRawTypeIdentifier<?>>, validSuperTypes Collection<PojoRawTypeIdentifier<?>>) : SearchException in class org.hibernate.search.mapper.pojo.logging.impl.Log",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "74cb2d2fc4907a7b7bc046418d6b1af0ebf78e09",
      "url": "https://github.com/hibernate/hibernate-search/commit/74cb2d2fc4907a7b7bc046418d6b1af0ebf78e09",
      "commonRefactoring": [
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.standalone.model.impl.StandalonePojoPathsDefinitionProvider moved and renamed to org.hibernate.search.mapper.pojo.model.path.impl.SimplePojoPathsDefinitionProvider",
          "validation": true
        },
        {
          "type": "EXTRACT_VARIABLE",
          "description": "Extract Variable\tnode : var in method public contributeAdditionalMetadata(collector PojoAdditionalMetadataCollectorTypeNode) : void from class org.hibernate.search.mapper.orm.mapping.impl.HibernateOrmEntityTypeMetadataContributor",
          "validation": true
        },
        {
          "type": "CHANGE_ATTRIBUTE_TYPE",
          "description": "Change Attribute Type\tenabled : boolean to enabled : Boolean in class org.hibernate.search.mapper.pojo.mapping.definition.programmatic.impl.TypeMappingIndexedStepImpl",
          "validation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage PojoEntityTypeAdditionalMetadataBuilder(entityName String, pathDefinitionProvider PojoPathDefinitionProvider) renamed to public pathDefinitionProvider(pathDefinitionProvider PojoPathDefinitionProvider) : void in class org.hibernate.search.mapper.pojo.model.additionalmetadata.building.impl.PojoEntityTypeAdditionalMetadataBuilder",
          "validation": false
        },
        {
          "type": "RENAME_METHOD",
          "description": "Rename Method\tpackage checkSameEntity(entityName String) : void renamed to public entityName(entityName String) : void in class org.hibernate.search.mapper.pojo.model.additionalmetadata.building.impl.PojoEntityTypeAdditionalMetadataBuilder",
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/hibernate/hibernate-search.git",
      "sha1": "b2a9f0a25e63ade9bbab5b4c669d07bb0cf47442",
      "url": "https://github.com/hibernate/hibernate-search/commit/b2a9f0a25e63ade9bbab5b4c669d07bb0cf47442",
      "commonRefactoring": [],
      "ourApproach": [
        {
          "type": "RENAME_CLASS",
          "description": "Rename Class\torg.hibernate.search.mapper.pojo.standalone.model.impl.StandalonePojoPathsDefinition renamed to org.hibernate.search.mapper.pojo.standalone.model.impl.StandalonePojoPathsDefinitionProvider",
          "validation": true
        },
        {
          "type": "MOVE_OPERATION",
          "description": "Move Method\tpublic interpretPath(source PojoModelPathValueNode) : PojoPathDefinition from class org.hibernate.search.mapper.pojo.model.path.impl.PojoPathsDefinitionAdapter to public interpretPath(source PojoModelPathValueNode) : PojoPathDefinition from class org.hibernate.search.mapper.pojo.standalone.model.impl.StandalonePojoPathsDefinitionProvider",
          "validation": true
        }
      ],
      "baseline": [
        {
          "type": "MOVE_RENAME_CLASS",
          "description": "Move And Rename Class\torg.hibernate.search.mapper.pojo.model.path.impl.PojoPathsDefinitionAdapter moved and renamed to org.hibernate.search.mapper.pojo.standalone.model.impl.StandalonePojoPathsDefinitionProvider",
          "validation": false
        }
      ]
    }
  ]
}